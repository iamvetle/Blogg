{
// Place your frontend workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
// Placeholders with the same ids are connected.
// Example:
// "Print to console": {
// 	"scope": "javascript,typescript",
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }

	// Other snippets will be here, add a comma and then your snippet
	"Vue Pinia Test Template": {
	"prefix": "vuepiniatest",
	"body": [
		"import { mount } from '@vue/test-utils'",
		"import { createTestingPinia } from '@pinia/testing'",
		"import { useGeneralStore } from '~/store/generalStore'",
		"import _blank from '~/components/'",
		"",
		"describe('_blank testing', () => {",
		"    let wrapper;",
		"    let store;",
		"    let pinia;",
		"",
		"    beforeEach(() => {",
		"        pinia = createTestingPinia()",
		"        store = useGeneralStore(pinia)",
		"        wrapper = mount(_blank, {",
		"            global: {",
		"                plugins: [pinia],",
		"            },",
		"        })",
		"    })",
		"",
		"    test('exists', () => {",
		"        expect(wrapper.exists()).toBe(true)",
		"    })",
		"})"
	],
	"description": "Snippet for a Vue Test with Pinia"
	}

}