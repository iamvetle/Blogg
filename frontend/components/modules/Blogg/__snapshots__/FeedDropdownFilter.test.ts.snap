// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Testing FeedDropdownFilter > Should match snapshot 1`] = `
VueWrapper {
  "__app": {
    "_component": {
      "name": "VTU_ROOT",
      "render": [Function],
      "setup": [Function],
    },
    "_container": <div
      data-v-app=""
    />,
    "_context": {
      "app": [Circular],
      "components": {
        "FilterBox": {
          "name": "FilterBox",
        },
        "transition": {
          "name": "transition",
        },
        "transition-group": {
          "name": "transition-group",
        },
      },
      "config": {
        "compilerOptions": {},
        "errorHandler": undefined,
        "globalProperties": {
          "$pinia": {
            "_a": [Circular],
            "_e": EffectScope {
              "_active": true,
              "cleanups": [],
              "detached": true,
              "effects": [],
              "parent": undefined,
              "scopes": [
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 0,
                  "parent": [Circular],
                },
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 1,
                  "parent": [Circular],
                },
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 2,
                  "parent": [Circular],
                },
              ],
            },
            "_p": [
              [Function],
              [Function],
              [Function],
            ],
            "_s": Map {
              "search" => {
                "$dispose": [Function],
                "$id": "search",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "searchPart",
                    "categoryFilterPart",
                    "tagFilterPart",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "categoryFilterPart": null,
                "resetStore": [MockFunction spy],
                "searchPart": null,
                "tagFilterPart": null,
              },
              "Store for containing posts and related to posts" => {
                "$dispose": [Function],
                "$id": "Store for containing posts and related to posts",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "posts",
                    "allComments",
                    "followingPosts",
                    "allCategories",
                    "allTags",
                    "loggedInUserPosts",
                    "baseFetchURL",
                    "baseLoggedInUserPostsURL",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "allCategories": null,
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/min-side/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
                "resetStore": [MockFunction spy],
              },
              "Pagination Store" => {
                "$dispose": [Function],
                "$id": "Pagination Store",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "activeFetchURL",
                    "next_page",
                    "previous_page",
                    "last_page_link",
                    "all_pages_count",
                    "number_of_posts",
                    "current_page_number",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "activeFetchURL": "http://localhost:8888/api/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
                "resetStore": [MockFunction spy],
              },
            },
            "_testing": true,
            "app": [Circular],
            "install": [Function],
            "state": RefImpl {
              "__v_isRef": true,
              "__v_isShallow": false,
              "_rawValue": {
                "Pagination Store": {
                  "activeFetchURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/feed/",
                    "_value": "http://localhost:8888/api/feed/",
                    "dep": undefined,
                  },
                  "all_pages_count": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "current_page_number": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "last_page_link": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                  "next_page": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                  "number_of_posts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "previous_page": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                },
                "Store for containing posts and related to posts": {
                  "allCategories": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "allComments": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "allTags": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": Set {},
                  },
                  "baseFetchURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/feed/",
                    "_value": "http://localhost:8888/api/feed/",
                    "dep": undefined,
                  },
                  "baseLoggedInUserPostsURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/min-side/posts/",
                    "_value": "http://localhost:8888/api/min-side/posts/",
                    "dep": undefined,
                  },
                  "followingPosts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "loggedInUserPosts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "posts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                },
                "search": {
                  "categoryFilterPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "searchPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "tagFilterPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                },
              },
              "_value": {
                "Pagination Store": {
                  "activeFetchURL": "http://localhost:8888/api/feed/",
                  "all_pages_count": 0,
                  "current_page_number": 0,
                  "last_page_link": "",
                  "next_page": "",
                  "number_of_posts": 0,
                  "previous_page": "",
                },
                "Store for containing posts and related to posts": {
                  "allCategories": null,
                  "allComments": null,
                  "allTags": null,
                  "baseFetchURL": "http://localhost:8888/api/feed/",
                  "baseLoggedInUserPostsURL": "http://localhost:8888/api/min-side/posts/",
                  "followingPosts": null,
                  "loggedInUserPosts": null,
                  "posts": null,
                },
                "search": {
                  "categoryFilterPart": null,
                  "searchPart": null,
                  "tagFilterPart": null,
                },
              },
              "dep": undefined,
            },
            "use": [Function],
          },
        },
        "isNativeTag": [Function],
        "optionMergeStrategies": {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": {},
      "emitsCache": WeakMap {},
      "mixins": [
        {
          "beforeCreate": [Function],
        },
      ],
      "optionsCache": WeakMap {},
      "propsCache": WeakMap {},
      "provides": {
        Symbol(pinia): {
          "_a": [Circular],
          "_e": EffectScope {
            "_active": true,
            "cleanups": [],
            "detached": true,
            "effects": [],
            "parent": undefined,
            "scopes": [
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 0,
                "parent": [Circular],
              },
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 1,
                "parent": [Circular],
              },
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 2,
                "parent": [Circular],
              },
            ],
          },
          "_p": [
            [Function],
            [Function],
            [Function],
          ],
          "_s": Map {
            "search" => {
              "$dispose": [Function],
              "$id": "search",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "searchPart",
                  "categoryFilterPart",
                  "tagFilterPart",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "categoryFilterPart": null,
              "resetStore": [MockFunction spy],
              "searchPart": null,
              "tagFilterPart": null,
            },
            "Store for containing posts and related to posts" => {
              "$dispose": [Function],
              "$id": "Store for containing posts and related to posts",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "posts",
                  "allComments",
                  "followingPosts",
                  "allCategories",
                  "allTags",
                  "loggedInUserPosts",
                  "baseFetchURL",
                  "baseLoggedInUserPostsURL",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "allCategories": null,
              "allComments": null,
              "allTags": null,
              "baseFetchURL": "http://localhost:8888/api/feed/",
              "baseLoggedInUserPostsURL": "http://localhost:8888/api/min-side/posts/",
              "followingPosts": null,
              "loggedInUserPosts": null,
              "posts": null,
              "resetStore": [MockFunction spy],
            },
            "Pagination Store" => {
              "$dispose": [Function],
              "$id": "Pagination Store",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "activeFetchURL",
                  "next_page",
                  "previous_page",
                  "last_page_link",
                  "all_pages_count",
                  "number_of_posts",
                  "current_page_number",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "activeFetchURL": "http://localhost:8888/api/feed/",
              "all_pages_count": 0,
              "current_page_number": 0,
              "last_page_link": "",
              "next_page": "",
              "number_of_posts": 0,
              "previous_page": "",
              "resetStore": [MockFunction spy],
            },
          },
          "_testing": true,
          "app": [Circular],
          "install": [Function],
          "state": RefImpl {
            "__v_isRef": true,
            "__v_isShallow": false,
            "_rawValue": {
              "Pagination Store": {
                "activeFetchURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/feed/",
                  "_value": "http://localhost:8888/api/feed/",
                  "dep": undefined,
                },
                "all_pages_count": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "current_page_number": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "last_page_link": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
                "next_page": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
                "number_of_posts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "previous_page": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
              },
              "Store for containing posts and related to posts": {
                "allCategories": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "allComments": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "allTags": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": Set {},
                },
                "baseFetchURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/feed/",
                  "_value": "http://localhost:8888/api/feed/",
                  "dep": undefined,
                },
                "baseLoggedInUserPostsURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/min-side/posts/",
                  "_value": "http://localhost:8888/api/min-side/posts/",
                  "dep": undefined,
                },
                "followingPosts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "loggedInUserPosts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "posts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
              },
              "search": {
                "categoryFilterPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "searchPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "tagFilterPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
              },
            },
            "_value": {
              "Pagination Store": {
                "activeFetchURL": "http://localhost:8888/api/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
              },
              "Store for containing posts and related to posts": {
                "allCategories": null,
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/min-side/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
              },
              "search": {
                "categoryFilterPart": null,
                "searchPart": null,
                "tagFilterPart": null,
              },
            },
            "dep": undefined,
          },
          "use": [Function],
        },
      },
      "reload": [Function],
    },
    "_instance": null,
    "_props": null,
    "_uid": 0,
    "component": [Function],
    "config": {
      "compilerOptions": {},
      "errorHandler": undefined,
      "globalProperties": {
        "$pinia": {
          "_a": [Circular],
          "_e": EffectScope {
            "_active": true,
            "cleanups": [],
            "detached": true,
            "effects": [],
            "parent": undefined,
            "scopes": [
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 0,
                "parent": [Circular],
              },
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 1,
                "parent": [Circular],
              },
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 2,
                "parent": [Circular],
              },
            ],
          },
          "_p": [
            [Function],
            [Function],
            [Function],
          ],
          "_s": Map {
            "search" => {
              "$dispose": [Function],
              "$id": "search",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "searchPart",
                  "categoryFilterPart",
                  "tagFilterPart",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "categoryFilterPart": null,
              "resetStore": [MockFunction spy],
              "searchPart": null,
              "tagFilterPart": null,
            },
            "Store for containing posts and related to posts" => {
              "$dispose": [Function],
              "$id": "Store for containing posts and related to posts",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "posts",
                  "allComments",
                  "followingPosts",
                  "allCategories",
                  "allTags",
                  "loggedInUserPosts",
                  "baseFetchURL",
                  "baseLoggedInUserPostsURL",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "allCategories": null,
              "allComments": null,
              "allTags": null,
              "baseFetchURL": "http://localhost:8888/api/feed/",
              "baseLoggedInUserPostsURL": "http://localhost:8888/api/min-side/posts/",
              "followingPosts": null,
              "loggedInUserPosts": null,
              "posts": null,
              "resetStore": [MockFunction spy],
            },
            "Pagination Store" => {
              "$dispose": [Function],
              "$id": "Pagination Store",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "activeFetchURL",
                  "next_page",
                  "previous_page",
                  "last_page_link",
                  "all_pages_count",
                  "number_of_posts",
                  "current_page_number",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "activeFetchURL": "http://localhost:8888/api/feed/",
              "all_pages_count": 0,
              "current_page_number": 0,
              "last_page_link": "",
              "next_page": "",
              "number_of_posts": 0,
              "previous_page": "",
              "resetStore": [MockFunction spy],
            },
          },
          "_testing": true,
          "app": [Circular],
          "install": [Function],
          "state": RefImpl {
            "__v_isRef": true,
            "__v_isShallow": false,
            "_rawValue": {
              "Pagination Store": {
                "activeFetchURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/feed/",
                  "_value": "http://localhost:8888/api/feed/",
                  "dep": undefined,
                },
                "all_pages_count": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "current_page_number": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "last_page_link": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
                "next_page": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
                "number_of_posts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "previous_page": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
              },
              "Store for containing posts and related to posts": {
                "allCategories": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "allComments": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "allTags": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": Set {},
                },
                "baseFetchURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/feed/",
                  "_value": "http://localhost:8888/api/feed/",
                  "dep": undefined,
                },
                "baseLoggedInUserPostsURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/min-side/posts/",
                  "_value": "http://localhost:8888/api/min-side/posts/",
                  "dep": undefined,
                },
                "followingPosts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "loggedInUserPosts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "posts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
              },
              "search": {
                "categoryFilterPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "searchPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "tagFilterPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
              },
            },
            "_value": {
              "Pagination Store": {
                "activeFetchURL": "http://localhost:8888/api/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
              },
              "Store for containing posts and related to posts": {
                "allCategories": null,
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/min-side/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
              },
              "search": {
                "categoryFilterPart": null,
                "searchPart": null,
                "tagFilterPart": null,
              },
            },
            "dep": undefined,
          },
          "use": [Function],
        },
      },
      "isNativeTag": [Function],
      "optionMergeStrategies": {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "runWithContext": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.3.7",
  },
  "__setProps": [Function],
  "cleanUpCallbacks": [],
  "componentVM": {},
  "isDisabled": [Function],
  "rootVM": {
    "VTU_COMPONENT": null,
  },
  "wrapperElement": <div>
    <span
      class="mb-2 w-full flex items-center text-center justify-center"
    >
      <button
        class="w-full h-full text-lg hover:text-primaryFixedDim rounded-md px-1 py-1 text-onPrimary flex text-center items-center justify-center"
        data-test="dropdown-button"
      >
         Filter posts 
      </button>
    </span>
    <div
      class="px-2 py-2"
      data-test="filter-component"
      style="display: none;"
    >
      <!-- The filter dropdown compontent-->
      <keep-alive-stub />
    </div>
  </div>,
}
`;
