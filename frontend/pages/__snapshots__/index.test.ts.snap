// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Testing the index page > Should match snapshot 1`] = `
VueWrapper {
  "__app": {
    "_component": {
      "name": "VTU_ROOT",
      "render": [Function],
      "setup": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      
      <div
        class="mt-8 max-w-[1100px] w-full mx-auto px-6 grid grid-cols-10 gap-28"
      >
        <div
          class="col-span-6 mx-auto w-full"
          data-test="everything"
        >
          <feed-main-stub />
        </div>
        <div
          class="col-span-4 mx-auto w-full"
          id="feed-sidebar"
        >
          <feed-sidebar-stub />
        </div>
      </div>
      <!-- fallback -->
      
    </div>,
    "_context": {
      "app": [Circular],
      "components": {
        "FeedMain": {
          "name": "FeedMain",
        },
        "FeedSidebar": {
          "name": "FeedSidebar",
        },
        "transition": {
          "name": "transition",
        },
        "transition-group": {
          "name": "transition-group",
        },
      },
      "config": {
        "compilerOptions": {},
        "errorHandler": undefined,
        "globalProperties": {
          "$pinia": {
            "_a": [Circular],
            "_e": EffectScope {
              "_active": true,
              "cleanups": [],
              "detached": true,
              "effects": [],
              "parent": undefined,
              "scopes": [
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 0,
                  "parent": [Circular],
                },
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 1,
                  "parent": [Circular],
                },
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 2,
                  "parent": [Circular],
                },
              ],
            },
            "_p": [
              [Function],
              [Function],
              [Function],
            ],
            "_s": Map {
              "Store for containing posts and related to posts" => {
                "$dispose": [Function],
                "$id": "Store for containing posts and related to posts",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "posts",
                    "allComments",
                    "followingPosts",
                    "allTags",
                    "loggedInUserPosts",
                    "baseFetchURL",
                    "baseLoggedInUserPostsURL",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
              "search" => {
                "$dispose": [Function],
                "$id": "search",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "searchPart",
                    "categoryFilterPart",
                    "tagFilterPart",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "categoryFilterPart": null,
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "searchPart": null,
                "tagFilterPart": null,
              },
              "Pagination Store" => {
                "$dispose": [Function],
                "$id": "Pagination Store",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "activeFetchURL",
                    "next_page",
                    "previous_page",
                    "last_page_link",
                    "all_pages_count",
                    "number_of_posts",
                    "current_page_number",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
            },
            "_testing": true,
            "app": [Circular],
            "install": [Function],
            "state": RefImpl {
              "__v_isRef": true,
              "__v_isShallow": false,
              "_rawValue": {
                "Pagination Store": {
                  "activeFetchURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/posts/feed/",
                    "_value": "http://localhost:8888/api/posts/feed/",
                    "dep": undefined,
                  },
                  "all_pages_count": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "current_page_number": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "last_page_link": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                  "next_page": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                  "number_of_posts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "previous_page": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                },
                "Store for containing posts and related to posts": {
                  "allComments": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "allTags": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "baseFetchURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/posts/feed/",
                    "_value": "http://localhost:8888/api/posts/feed/",
                    "dep": undefined,
                  },
                  "baseLoggedInUserPostsURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/myuser/posts/",
                    "_value": "http://localhost:8888/api/myuser/posts/",
                    "dep": undefined,
                  },
                  "followingPosts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "loggedInUserPosts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "posts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                },
                "search": {
                  "categoryFilterPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "searchPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "tagFilterPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                },
              },
              "_value": {
                "Pagination Store": {
                  "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                  "all_pages_count": 0,
                  "current_page_number": 0,
                  "last_page_link": "",
                  "next_page": "",
                  "number_of_posts": 0,
                  "previous_page": "",
                },
                "Store for containing posts and related to posts": {
                  "allComments": null,
                  "allTags": null,
                  "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                  "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                  "followingPosts": null,
                  "loggedInUserPosts": null,
                  "posts": null,
                },
                "search": {
                  "categoryFilterPart": null,
                  "searchPart": null,
                  "tagFilterPart": null,
                },
              },
              "dep": undefined,
            },
            "use": [Function],
          },
        },
        "isNativeTag": [Function],
        "optionMergeStrategies": {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": {},
      "emitsCache": WeakMap {},
      "mixins": [
        {
          "beforeCreate": [Function],
        },
      ],
      "optionsCache": WeakMap {},
      "propsCache": WeakMap {},
      "provides": {
        Symbol(pinia): {
          "_a": [Circular],
          "_e": EffectScope {
            "_active": true,
            "cleanups": [],
            "detached": true,
            "effects": [],
            "parent": undefined,
            "scopes": [
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 0,
                "parent": [Circular],
              },
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 1,
                "parent": [Circular],
              },
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 2,
                "parent": [Circular],
              },
            ],
          },
          "_p": [
            [Function],
            [Function],
            [Function],
          ],
          "_s": Map {
            "Store for containing posts and related to posts" => {
              "$dispose": [Function],
              "$id": "Store for containing posts and related to posts",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "posts",
                  "allComments",
                  "followingPosts",
                  "allTags",
                  "loggedInUserPosts",
                  "baseFetchURL",
                  "baseLoggedInUserPostsURL",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "allComments": null,
              "allTags": null,
              "baseFetchURL": "http://localhost:8888/api/posts/feed/",
              "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
              "followingPosts": null,
              "loggedInUserPosts": null,
              "posts": null,
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            },
            "search" => {
              "$dispose": [Function],
              "$id": "search",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "searchPart",
                  "categoryFilterPart",
                  "tagFilterPart",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "categoryFilterPart": null,
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "searchPart": null,
              "tagFilterPart": null,
            },
            "Pagination Store" => {
              "$dispose": [Function],
              "$id": "Pagination Store",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "activeFetchURL",
                  "next_page",
                  "previous_page",
                  "last_page_link",
                  "all_pages_count",
                  "number_of_posts",
                  "current_page_number",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "activeFetchURL": "http://localhost:8888/api/posts/feed/",
              "all_pages_count": 0,
              "current_page_number": 0,
              "last_page_link": "",
              "next_page": "",
              "number_of_posts": 0,
              "previous_page": "",
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            },
          },
          "_testing": true,
          "app": [Circular],
          "install": [Function],
          "state": RefImpl {
            "__v_isRef": true,
            "__v_isShallow": false,
            "_rawValue": {
              "Pagination Store": {
                "activeFetchURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/posts/feed/",
                  "_value": "http://localhost:8888/api/posts/feed/",
                  "dep": undefined,
                },
                "all_pages_count": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "current_page_number": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "last_page_link": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
                "next_page": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
                "number_of_posts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "previous_page": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
              },
              "Store for containing posts and related to posts": {
                "allComments": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "allTags": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "baseFetchURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/posts/feed/",
                  "_value": "http://localhost:8888/api/posts/feed/",
                  "dep": undefined,
                },
                "baseLoggedInUserPostsURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/myuser/posts/",
                  "_value": "http://localhost:8888/api/myuser/posts/",
                  "dep": undefined,
                },
                "followingPosts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "loggedInUserPosts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "posts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
              },
              "search": {
                "categoryFilterPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "searchPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "tagFilterPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
              },
            },
            "_value": {
              "Pagination Store": {
                "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
              },
              "Store for containing posts and related to posts": {
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
              },
              "search": {
                "categoryFilterPart": null,
                "searchPart": null,
                "tagFilterPart": null,
              },
            },
            "dep": undefined,
          },
          "use": [Function],
        },
      },
      "reload": [Function],
    },
    "_instance": {
      "a": null,
      "accessCache": {},
      "appContext": {
        "app": [Circular],
        "components": {
          "FeedMain": {
            "name": "FeedMain",
          },
          "FeedSidebar": {
            "name": "FeedSidebar",
          },
          "transition": {
            "name": "transition",
          },
          "transition-group": {
            "name": "transition-group",
          },
        },
        "config": {
          "compilerOptions": {},
          "errorHandler": undefined,
          "globalProperties": {
            "$pinia": {
              "_a": [Circular],
              "_e": EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": true,
                "effects": [],
                "parent": undefined,
                "scopes": [
                  EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": false,
                    "effects": [],
                    "index": 0,
                    "parent": [Circular],
                  },
                  EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": false,
                    "effects": [],
                    "index": 1,
                    "parent": [Circular],
                  },
                  EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": false,
                    "effects": [],
                    "index": 2,
                    "parent": [Circular],
                  },
                ],
              },
              "_p": [
                [Function],
                [Function],
                [Function],
              ],
              "_s": Map {
                "Store for containing posts and related to posts" => {
                  "$dispose": [Function],
                  "$id": "Store for containing posts and related to posts",
                  "$onAction": [Function],
                  "$patch": [MockFunction $patch],
                  "$reset": [MockFunction spy],
                  "$subscribe": [Function],
                  "_customProperties": Set {},
                  "_hmrPayload": {
                    "actions": {
                      "resetStore": [Function],
                    },
                    "getters": {},
                    "hotState": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": {},
                      "_value": {},
                      "dep": undefined,
                    },
                    "state": [
                      "posts",
                      "allComments",
                      "followingPosts",
                      "allTags",
                      "loggedInUserPosts",
                      "baseFetchURL",
                      "baseLoggedInUserPostsURL",
                    ],
                  },
                  "_hotUpdate": [Function],
                  "_p": [Circular],
                  "allComments": null,
                  "allTags": null,
                  "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                  "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                  "followingPosts": null,
                  "loggedInUserPosts": null,
                  "posts": null,
                  "resetStore": [MockFunction spy] {
                    "calls": [
                      [],
                      [],
                      [],
                    ],
                    "results": [
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                },
                "search" => {
                  "$dispose": [Function],
                  "$id": "search",
                  "$onAction": [Function],
                  "$patch": [MockFunction $patch],
                  "$reset": [MockFunction spy],
                  "$subscribe": [Function],
                  "_customProperties": Set {},
                  "_hmrPayload": {
                    "actions": {
                      "resetStore": [Function],
                    },
                    "getters": {},
                    "hotState": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": {},
                      "_value": {},
                      "dep": undefined,
                    },
                    "state": [
                      "searchPart",
                      "categoryFilterPart",
                      "tagFilterPart",
                    ],
                  },
                  "_hotUpdate": [Function],
                  "_p": [Circular],
                  "categoryFilterPart": null,
                  "resetStore": [MockFunction spy] {
                    "calls": [
                      [],
                      [],
                      [],
                    ],
                    "results": [
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "searchPart": null,
                  "tagFilterPart": null,
                },
                "Pagination Store" => {
                  "$dispose": [Function],
                  "$id": "Pagination Store",
                  "$onAction": [Function],
                  "$patch": [MockFunction $patch],
                  "$reset": [MockFunction spy],
                  "$subscribe": [Function],
                  "_customProperties": Set {},
                  "_hmrPayload": {
                    "actions": {
                      "resetStore": [Function],
                    },
                    "getters": {},
                    "hotState": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": {},
                      "_value": {},
                      "dep": undefined,
                    },
                    "state": [
                      "activeFetchURL",
                      "next_page",
                      "previous_page",
                      "last_page_link",
                      "all_pages_count",
                      "number_of_posts",
                      "current_page_number",
                    ],
                  },
                  "_hotUpdate": [Function],
                  "_p": [Circular],
                  "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                  "all_pages_count": 0,
                  "current_page_number": 0,
                  "last_page_link": "",
                  "next_page": "",
                  "number_of_posts": 0,
                  "previous_page": "",
                  "resetStore": [MockFunction spy] {
                    "calls": [
                      [],
                      [],
                      [],
                    ],
                    "results": [
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
              "_testing": true,
              "app": [Circular],
              "install": [Function],
              "state": RefImpl {
                "__v_isRef": true,
                "__v_isShallow": false,
                "_rawValue": {
                  "Pagination Store": {
                    "activeFetchURL": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "http://localhost:8888/api/posts/feed/",
                      "_value": "http://localhost:8888/api/posts/feed/",
                      "dep": undefined,
                    },
                    "all_pages_count": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": 0,
                      "_value": 0,
                      "dep": undefined,
                    },
                    "current_page_number": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": 0,
                      "_value": 0,
                      "dep": undefined,
                    },
                    "last_page_link": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "",
                      "_value": "",
                      "dep": undefined,
                    },
                    "next_page": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "",
                      "_value": "",
                      "dep": undefined,
                    },
                    "number_of_posts": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": 0,
                      "_value": 0,
                      "dep": undefined,
                    },
                    "previous_page": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "",
                      "_value": "",
                      "dep": undefined,
                    },
                  },
                  "Store for containing posts and related to posts": {
                    "allComments": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "allTags": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "baseFetchURL": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "http://localhost:8888/api/posts/feed/",
                      "_value": "http://localhost:8888/api/posts/feed/",
                      "dep": undefined,
                    },
                    "baseLoggedInUserPostsURL": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "http://localhost:8888/api/myuser/posts/",
                      "_value": "http://localhost:8888/api/myuser/posts/",
                      "dep": undefined,
                    },
                    "followingPosts": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "loggedInUserPosts": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "posts": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                  },
                  "search": {
                    "categoryFilterPart": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "searchPart": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "tagFilterPart": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                  },
                },
                "_value": {
                  "Pagination Store": {
                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                    "all_pages_count": 0,
                    "current_page_number": 0,
                    "last_page_link": "",
                    "next_page": "",
                    "number_of_posts": 0,
                    "previous_page": "",
                  },
                  "Store for containing posts and related to posts": {
                    "allComments": null,
                    "allTags": null,
                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                    "followingPosts": null,
                    "loggedInUserPosts": null,
                    "posts": null,
                  },
                  "search": {
                    "categoryFilterPart": null,
                    "searchPart": null,
                    "tagFilterPart": null,
                  },
                },
                "dep": undefined,
              },
              "use": [Function],
            },
          },
          "isNativeTag": [Function],
          "optionMergeStrategies": {},
          "performance": false,
          "warnHandler": undefined,
        },
        "directives": {},
        "emitsCache": WeakMap {},
        "mixins": [
          {
            "beforeCreate": [Function],
          },
        ],
        "optionsCache": WeakMap {},
        "propsCache": WeakMap {},
        "provides": {
          Symbol(pinia): {
            "_a": [Circular],
            "_e": EffectScope {
              "_active": true,
              "cleanups": [],
              "detached": true,
              "effects": [],
              "parent": undefined,
              "scopes": [
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 0,
                  "parent": [Circular],
                },
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 1,
                  "parent": [Circular],
                },
                EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": false,
                  "effects": [],
                  "index": 2,
                  "parent": [Circular],
                },
              ],
            },
            "_p": [
              [Function],
              [Function],
              [Function],
            ],
            "_s": Map {
              "Store for containing posts and related to posts" => {
                "$dispose": [Function],
                "$id": "Store for containing posts and related to posts",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "posts",
                    "allComments",
                    "followingPosts",
                    "allTags",
                    "loggedInUserPosts",
                    "baseFetchURL",
                    "baseLoggedInUserPostsURL",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
              "search" => {
                "$dispose": [Function],
                "$id": "search",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "searchPart",
                    "categoryFilterPart",
                    "tagFilterPart",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "categoryFilterPart": null,
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "searchPart": null,
                "tagFilterPart": null,
              },
              "Pagination Store" => {
                "$dispose": [Function],
                "$id": "Pagination Store",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "activeFetchURL",
                    "next_page",
                    "previous_page",
                    "last_page_link",
                    "all_pages_count",
                    "number_of_posts",
                    "current_page_number",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": [Circular],
                "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
            },
            "_testing": true,
            "app": [Circular],
            "install": [Function],
            "state": RefImpl {
              "__v_isRef": true,
              "__v_isShallow": false,
              "_rawValue": {
                "Pagination Store": {
                  "activeFetchURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/posts/feed/",
                    "_value": "http://localhost:8888/api/posts/feed/",
                    "dep": undefined,
                  },
                  "all_pages_count": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "current_page_number": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "last_page_link": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                  "next_page": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                  "number_of_posts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": 0,
                    "_value": 0,
                    "dep": undefined,
                  },
                  "previous_page": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "",
                    "_value": "",
                    "dep": undefined,
                  },
                },
                "Store for containing posts and related to posts": {
                  "allComments": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "allTags": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "baseFetchURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/posts/feed/",
                    "_value": "http://localhost:8888/api/posts/feed/",
                    "dep": undefined,
                  },
                  "baseLoggedInUserPostsURL": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": "http://localhost:8888/api/myuser/posts/",
                    "_value": "http://localhost:8888/api/myuser/posts/",
                    "dep": undefined,
                  },
                  "followingPosts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "loggedInUserPosts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "posts": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                },
                "search": {
                  "categoryFilterPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "searchPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                  "tagFilterPart": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": null,
                    "_value": null,
                    "dep": undefined,
                  },
                },
              },
              "_value": {
                "Pagination Store": {
                  "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                  "all_pages_count": 0,
                  "current_page_number": 0,
                  "last_page_link": "",
                  "next_page": "",
                  "number_of_posts": 0,
                  "previous_page": "",
                },
                "Store for containing posts and related to posts": {
                  "allComments": null,
                  "allTags": null,
                  "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                  "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                  "followingPosts": null,
                  "loggedInUserPosts": null,
                  "posts": null,
                },
                "search": {
                  "categoryFilterPart": null,
                  "searchPart": null,
                  "tagFilterPart": null,
                },
              },
              "dep": undefined,
            },
            "use": [Function],
          },
        },
        "reload": [Function],
      },
      "asyncDep": null,
      "asyncResolved": false,
      "attrs": {},
      "attrsProxy": null,
      "bc": null,
      "bm": null,
      "bu": null,
      "bum": null,
      "c": null,
      "components": null,
      "ctx": {
        "VTU_COMPONENT": {},
      },
      "da": null,
      "data": {},
      "devtoolsRawSetupState": {
        "VTU_COMPONENT": RefImpl {
          "__v_isRef": true,
          "__v_isShallow": false,
          "_rawValue": {},
          "_value": {},
          "dep": undefined,
        },
      },
      "directives": null,
      "ec": null,
      "effect": ReactiveEffect {
        "active": true,
        "allowRecurse": true,
        "deps": [
          Set {
            [Circular],
          },
          Set {
            [Circular],
          },
          Set {
            [Circular],
          },
        ],
        "fn": [Function],
        "onTrack": undefined,
        "onTrigger": undefined,
        "parent": undefined,
        "scheduler": [Function],
      },
      "emit": [Function],
      "emitsOptions": null,
      "emitted": null,
      "exposeProxy": null,
      "exposed": null,
      "inheritAttrs": undefined,
      "isDeactivated": false,
      "isMounted": true,
      "isUnmounted": false,
      "m": null,
      "next": null,
      "parent": null,
      "props": {},
      "propsDefaults": {},
      "propsOptions": [
        {},
        [],
      ],
      "provides": {},
      "proxy": {
        "VTU_COMPONENT": {},
      },
      "refs": {
        "VTU_COMPONENT": {},
      },
      "render": [Function],
      "renderCache": [],
      "root": [Circular],
      "rtc": null,
      "rtg": null,
      "scope": EffectScope {
        "_active": true,
        "cleanups": [],
        "detached": true,
        "effects": [
          ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": [
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "parent": undefined,
            "scheduler": [Function],
          },
        ],
        "parent": undefined,
      },
      "setupContext": null,
      "setupState": {
        "VTU_COMPONENT": {},
      },
      "slots": {},
      "slotsProxy": null,
      "sp": null,
      "subTree": {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": null,
        "children": {
          "_ctx": [Circular],
        },
        "component": {
          "a": null,
          "accessCache": {
            "_pStores": 4,
          },
          "appContext": {
            "app": [Circular],
            "components": {
              "FeedMain": {
                "name": "FeedMain",
              },
              "FeedSidebar": {
                "name": "FeedSidebar",
              },
              "transition": {
                "name": "transition",
              },
              "transition-group": {
                "name": "transition-group",
              },
            },
            "config": {
              "compilerOptions": {},
              "errorHandler": undefined,
              "globalProperties": {
                "$pinia": {
                  "_a": [Circular],
                  "_e": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [],
                    "parent": undefined,
                    "scopes": [
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 0,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 1,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 2,
                        "parent": [Circular],
                      },
                    ],
                  },
                  "_p": [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "_s": Map {
                    "Store for containing posts and related to posts" => {
                      "$dispose": [Function],
                      "$id": "Store for containing posts and related to posts",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "posts",
                          "allComments",
                          "followingPosts",
                          "allTags",
                          "loggedInUserPosts",
                          "baseFetchURL",
                          "baseLoggedInUserPostsURL",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                    "search" => {
                      "$dispose": [Function],
                      "$id": "search",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "searchPart",
                          "categoryFilterPart",
                          "tagFilterPart",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "categoryFilterPart": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                    "Pagination Store" => {
                      "$dispose": [Function],
                      "$id": "Pagination Store",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "activeFetchURL",
                          "next_page",
                          "previous_page",
                          "last_page_link",
                          "all_pages_count",
                          "number_of_posts",
                          "current_page_number",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                  "_testing": true,
                  "app": [Circular],
                  "install": [Function],
                  "state": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {
                      "Pagination Store": {
                        "activeFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "all_pages_count": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "current_page_number": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "last_page_link": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "next_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "number_of_posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "previous_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "allTags": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "baseFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "baseLoggedInUserPostsURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                          "_value": "http://localhost:8888/api/myuser/posts/",
                          "dep": undefined,
                        },
                        "followingPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "loggedInUserPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                      "search": {
                        "categoryFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "searchPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "tagFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                    },
                    "_value": {
                      "Pagination Store": {
                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                        "all_pages_count": 0,
                        "current_page_number": 0,
                        "last_page_link": "",
                        "next_page": "",
                        "number_of_posts": 0,
                        "previous_page": "",
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": null,
                        "allTags": null,
                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                        "followingPosts": null,
                        "loggedInUserPosts": null,
                        "posts": null,
                      },
                      "search": {
                        "categoryFilterPart": null,
                        "searchPart": null,
                        "tagFilterPart": null,
                      },
                    },
                    "dep": undefined,
                  },
                  "use": [Function],
                },
              },
              "isNativeTag": [Function],
              "optionMergeStrategies": {},
              "performance": false,
              "warnHandler": undefined,
            },
            "directives": {},
            "emitsCache": WeakMap {},
            "mixins": [
              {
                "beforeCreate": [Function],
              },
            ],
            "optionsCache": WeakMap {},
            "propsCache": WeakMap {},
            "provides": {
              Symbol(pinia): {
                "_a": [Circular],
                "_e": EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": true,
                  "effects": [],
                  "parent": undefined,
                  "scopes": [
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 0,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 1,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 2,
                      "parent": [Circular],
                    },
                  ],
                },
                "_p": [
                  [Function],
                  [Function],
                  [Function],
                ],
                "_s": Map {
                  "Store for containing posts and related to posts" => {
                    "$dispose": [Function],
                    "$id": "Store for containing posts and related to posts",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "posts",
                        "allComments",
                        "followingPosts",
                        "allTags",
                        "loggedInUserPosts",
                        "baseFetchURL",
                        "baseLoggedInUserPostsURL",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "allComments": null,
                    "allTags": null,
                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                    "followingPosts": null,
                    "loggedInUserPosts": null,
                    "posts": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                  "search" => {
                    "$dispose": [Function],
                    "$id": "search",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "searchPart",
                        "categoryFilterPart",
                        "tagFilterPart",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "categoryFilterPart": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "searchPart": null,
                    "tagFilterPart": null,
                  },
                  "Pagination Store" => {
                    "$dispose": [Function],
                    "$id": "Pagination Store",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "activeFetchURL",
                        "next_page",
                        "previous_page",
                        "last_page_link",
                        "all_pages_count",
                        "number_of_posts",
                        "current_page_number",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                    "all_pages_count": 0,
                    "current_page_number": 0,
                    "last_page_link": "",
                    "next_page": "",
                    "number_of_posts": 0,
                    "previous_page": "",
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
                "_testing": true,
                "app": [Circular],
                "install": [Function],
                "state": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {
                    "Pagination Store": {
                      "activeFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "all_pages_count": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "current_page_number": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "last_page_link": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "next_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "number_of_posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "previous_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "allTags": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "baseFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "baseLoggedInUserPostsURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                        "_value": "http://localhost:8888/api/myuser/posts/",
                        "dep": undefined,
                      },
                      "followingPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "loggedInUserPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                    "search": {
                      "categoryFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "searchPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "tagFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                  },
                  "_value": {
                    "Pagination Store": {
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                    },
                    "search": {
                      "categoryFilterPart": null,
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                  },
                  "dep": undefined,
                },
                "use": [Function],
              },
            },
            "reload": [Function],
          },
          "asyncDep": null,
          "asyncResolved": false,
          "attrs": {},
          "attrsProxy": null,
          "bc": null,
          "bm": null,
          "bu": null,
          "bum": null,
          "c": null,
          "components": {},
          "ctx": {
            "_pStores": {
              "Pagination Store": {
                "$dispose": [Function],
                "$id": "Pagination Store",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "activeFetchURL",
                    "next_page",
                    "previous_page",
                    "last_page_link",
                    "all_pages_count",
                    "number_of_posts",
                    "current_page_number",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": {
                  "_a": [Circular],
                  "_e": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [],
                    "parent": undefined,
                    "scopes": [
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 0,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 1,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 2,
                        "parent": [Circular],
                      },
                    ],
                  },
                  "_p": [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "_s": Map {
                    "Store for containing posts and related to posts" => {
                      "$dispose": [Function],
                      "$id": "Store for containing posts and related to posts",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "posts",
                          "allComments",
                          "followingPosts",
                          "allTags",
                          "loggedInUserPosts",
                          "baseFetchURL",
                          "baseLoggedInUserPostsURL",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                    "search" => {
                      "$dispose": [Function],
                      "$id": "search",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "searchPart",
                          "categoryFilterPart",
                          "tagFilterPart",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "categoryFilterPart": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                    "Pagination Store" => [Circular],
                  },
                  "_testing": true,
                  "app": [Circular],
                  "install": [Function],
                  "state": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {
                      "Pagination Store": {
                        "activeFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "all_pages_count": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "current_page_number": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "last_page_link": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "next_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "number_of_posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "previous_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "allTags": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "baseFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "baseLoggedInUserPostsURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                          "_value": "http://localhost:8888/api/myuser/posts/",
                          "dep": undefined,
                        },
                        "followingPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "loggedInUserPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                      "search": {
                        "categoryFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "searchPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "tagFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                    },
                    "_value": {
                      "Pagination Store": {
                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                        "all_pages_count": 0,
                        "current_page_number": 0,
                        "last_page_link": "",
                        "next_page": "",
                        "number_of_posts": 0,
                        "previous_page": "",
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": null,
                        "allTags": null,
                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                        "followingPosts": null,
                        "loggedInUserPosts": null,
                        "posts": null,
                      },
                      "search": {
                        "categoryFilterPart": null,
                        "searchPart": null,
                        "tagFilterPart": null,
                      },
                    },
                    "dep": undefined,
                  },
                  "use": [Function],
                },
                "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
              "Store for containing posts and related to posts": {
                "$dispose": [Function],
                "$id": "Store for containing posts and related to posts",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "posts",
                    "allComments",
                    "followingPosts",
                    "allTags",
                    "loggedInUserPosts",
                    "baseFetchURL",
                    "baseLoggedInUserPostsURL",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": {
                  "_a": [Circular],
                  "_e": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [],
                    "parent": undefined,
                    "scopes": [
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 0,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 1,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 2,
                        "parent": [Circular],
                      },
                    ],
                  },
                  "_p": [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "_s": Map {
                    "Store for containing posts and related to posts" => [Circular],
                    "search" => {
                      "$dispose": [Function],
                      "$id": "search",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "searchPart",
                          "categoryFilterPart",
                          "tagFilterPart",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "categoryFilterPart": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                    "Pagination Store" => {
                      "$dispose": [Function],
                      "$id": "Pagination Store",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "activeFetchURL",
                          "next_page",
                          "previous_page",
                          "last_page_link",
                          "all_pages_count",
                          "number_of_posts",
                          "current_page_number",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                  "_testing": true,
                  "app": [Circular],
                  "install": [Function],
                  "state": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {
                      "Pagination Store": {
                        "activeFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "all_pages_count": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "current_page_number": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "last_page_link": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "next_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "number_of_posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "previous_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "allTags": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "baseFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "baseLoggedInUserPostsURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                          "_value": "http://localhost:8888/api/myuser/posts/",
                          "dep": undefined,
                        },
                        "followingPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "loggedInUserPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                      "search": {
                        "categoryFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "searchPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "tagFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                    },
                    "_value": {
                      "Pagination Store": {
                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                        "all_pages_count": 0,
                        "current_page_number": 0,
                        "last_page_link": "",
                        "next_page": "",
                        "number_of_posts": 0,
                        "previous_page": "",
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": null,
                        "allTags": null,
                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                        "followingPosts": null,
                        "loggedInUserPosts": null,
                        "posts": null,
                      },
                      "search": {
                        "categoryFilterPart": null,
                        "searchPart": null,
                        "tagFilterPart": null,
                      },
                    },
                    "dep": undefined,
                  },
                  "use": [Function],
                },
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
              "search": {
                "$dispose": [Function],
                "$id": "search",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "searchPart",
                    "categoryFilterPart",
                    "tagFilterPart",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": {
                  "_a": [Circular],
                  "_e": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [],
                    "parent": undefined,
                    "scopes": [
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 0,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 1,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 2,
                        "parent": [Circular],
                      },
                    ],
                  },
                  "_p": [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "_s": Map {
                    "Store for containing posts and related to posts" => {
                      "$dispose": [Function],
                      "$id": "Store for containing posts and related to posts",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "posts",
                          "allComments",
                          "followingPosts",
                          "allTags",
                          "loggedInUserPosts",
                          "baseFetchURL",
                          "baseLoggedInUserPostsURL",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                    "search" => [Circular],
                    "Pagination Store" => {
                      "$dispose": [Function],
                      "$id": "Pagination Store",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "activeFetchURL",
                          "next_page",
                          "previous_page",
                          "last_page_link",
                          "all_pages_count",
                          "number_of_posts",
                          "current_page_number",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                  "_testing": true,
                  "app": [Circular],
                  "install": [Function],
                  "state": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {
                      "Pagination Store": {
                        "activeFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "all_pages_count": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "current_page_number": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "last_page_link": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "next_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "number_of_posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "previous_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "allTags": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "baseFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "baseLoggedInUserPostsURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                          "_value": "http://localhost:8888/api/myuser/posts/",
                          "dep": undefined,
                        },
                        "followingPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "loggedInUserPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                      "search": {
                        "categoryFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "searchPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "tagFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                    },
                    "_value": {
                      "Pagination Store": {
                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                        "all_pages_count": 0,
                        "current_page_number": 0,
                        "last_page_link": "",
                        "next_page": "",
                        "number_of_posts": 0,
                        "previous_page": "",
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": null,
                        "allTags": null,
                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                        "followingPosts": null,
                        "loggedInUserPosts": null,
                        "posts": null,
                      },
                      "search": {
                        "categoryFilterPart": null,
                        "searchPart": null,
                        "tagFilterPart": null,
                      },
                    },
                    "dep": undefined,
                  },
                  "use": [Function],
                },
                "categoryFilterPart": null,
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "searchPart": null,
                "tagFilterPart": null,
              },
            },
          },
          "da": null,
          "data": {},
          "devtoolsRawSetupState": {
            "paginationStore": {
              "$dispose": [Function],
              "$id": "Pagination Store",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "activeFetchURL",
                  "next_page",
                  "previous_page",
                  "last_page_link",
                  "all_pages_count",
                  "number_of_posts",
                  "current_page_number",
                ],
              },
              "_hotUpdate": [Function],
              "_p": {
                "_a": [Circular],
                "_e": EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": true,
                  "effects": [],
                  "parent": undefined,
                  "scopes": [
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 0,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 1,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 2,
                      "parent": [Circular],
                    },
                  ],
                },
                "_p": [
                  [Function],
                  [Function],
                  [Function],
                ],
                "_s": Map {
                  "Store for containing posts and related to posts" => {
                    "$dispose": [Function],
                    "$id": "Store for containing posts and related to posts",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "posts",
                        "allComments",
                        "followingPosts",
                        "allTags",
                        "loggedInUserPosts",
                        "baseFetchURL",
                        "baseLoggedInUserPostsURL",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "allComments": null,
                    "allTags": null,
                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                    "followingPosts": null,
                    "loggedInUserPosts": null,
                    "posts": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                  "search" => {
                    "$dispose": [Function],
                    "$id": "search",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "searchPart",
                        "categoryFilterPart",
                        "tagFilterPart",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "categoryFilterPart": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "searchPart": null,
                    "tagFilterPart": null,
                  },
                  "Pagination Store" => [Circular],
                },
                "_testing": true,
                "app": [Circular],
                "install": [Function],
                "state": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {
                    "Pagination Store": {
                      "activeFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "all_pages_count": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "current_page_number": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "last_page_link": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "next_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "number_of_posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "previous_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "allTags": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "baseFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "baseLoggedInUserPostsURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                        "_value": "http://localhost:8888/api/myuser/posts/",
                        "dep": undefined,
                      },
                      "followingPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "loggedInUserPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                    "search": {
                      "categoryFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "searchPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "tagFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                  },
                  "_value": {
                    "Pagination Store": {
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                    },
                    "search": {
                      "categoryFilterPart": null,
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                  },
                  "dep": undefined,
                },
                "use": [Function],
              },
              "activeFetchURL": "http://localhost:8888/api/posts/feed/",
              "all_pages_count": 0,
              "current_page_number": 0,
              "last_page_link": "",
              "next_page": "",
              "number_of_posts": 0,
              "previous_page": "",
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            },
            "postStore": {
              "$dispose": [Function],
              "$id": "Store for containing posts and related to posts",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "posts",
                  "allComments",
                  "followingPosts",
                  "allTags",
                  "loggedInUserPosts",
                  "baseFetchURL",
                  "baseLoggedInUserPostsURL",
                ],
              },
              "_hotUpdate": [Function],
              "_p": {
                "_a": [Circular],
                "_e": EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": true,
                  "effects": [],
                  "parent": undefined,
                  "scopes": [
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 0,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 1,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 2,
                      "parent": [Circular],
                    },
                  ],
                },
                "_p": [
                  [Function],
                  [Function],
                  [Function],
                ],
                "_s": Map {
                  "Store for containing posts and related to posts" => [Circular],
                  "search" => {
                    "$dispose": [Function],
                    "$id": "search",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "searchPart",
                        "categoryFilterPart",
                        "tagFilterPart",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "categoryFilterPart": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "searchPart": null,
                    "tagFilterPart": null,
                  },
                  "Pagination Store" => {
                    "$dispose": [Function],
                    "$id": "Pagination Store",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "activeFetchURL",
                        "next_page",
                        "previous_page",
                        "last_page_link",
                        "all_pages_count",
                        "number_of_posts",
                        "current_page_number",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                    "all_pages_count": 0,
                    "current_page_number": 0,
                    "last_page_link": "",
                    "next_page": "",
                    "number_of_posts": 0,
                    "previous_page": "",
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
                "_testing": true,
                "app": [Circular],
                "install": [Function],
                "state": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {
                    "Pagination Store": {
                      "activeFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "all_pages_count": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "current_page_number": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "last_page_link": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "next_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "number_of_posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "previous_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "allTags": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "baseFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "baseLoggedInUserPostsURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                        "_value": "http://localhost:8888/api/myuser/posts/",
                        "dep": undefined,
                      },
                      "followingPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "loggedInUserPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                    "search": {
                      "categoryFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "searchPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "tagFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                  },
                  "_value": {
                    "Pagination Store": {
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                    },
                    "search": {
                      "categoryFilterPart": null,
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                  },
                  "dep": undefined,
                },
                "use": [Function],
              },
              "allComments": null,
              "allTags": null,
              "baseFetchURL": "http://localhost:8888/api/posts/feed/",
              "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
              "followingPosts": null,
              "loggedInUserPosts": null,
              "posts": null,
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            },
            "searchStore": {
              "$dispose": [Function],
              "$id": "search",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "searchPart",
                  "categoryFilterPart",
                  "tagFilterPart",
                ],
              },
              "_hotUpdate": [Function],
              "_p": {
                "_a": [Circular],
                "_e": EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": true,
                  "effects": [],
                  "parent": undefined,
                  "scopes": [
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 0,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 1,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 2,
                      "parent": [Circular],
                    },
                  ],
                },
                "_p": [
                  [Function],
                  [Function],
                  [Function],
                ],
                "_s": Map {
                  "Store for containing posts and related to posts" => {
                    "$dispose": [Function],
                    "$id": "Store for containing posts and related to posts",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "posts",
                        "allComments",
                        "followingPosts",
                        "allTags",
                        "loggedInUserPosts",
                        "baseFetchURL",
                        "baseLoggedInUserPostsURL",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "allComments": null,
                    "allTags": null,
                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                    "followingPosts": null,
                    "loggedInUserPosts": null,
                    "posts": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                  "search" => [Circular],
                  "Pagination Store" => {
                    "$dispose": [Function],
                    "$id": "Pagination Store",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "activeFetchURL",
                        "next_page",
                        "previous_page",
                        "last_page_link",
                        "all_pages_count",
                        "number_of_posts",
                        "current_page_number",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                    "all_pages_count": 0,
                    "current_page_number": 0,
                    "last_page_link": "",
                    "next_page": "",
                    "number_of_posts": 0,
                    "previous_page": "",
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
                "_testing": true,
                "app": [Circular],
                "install": [Function],
                "state": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {
                    "Pagination Store": {
                      "activeFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "all_pages_count": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "current_page_number": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "last_page_link": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "next_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "number_of_posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "previous_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "allTags": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "baseFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "baseLoggedInUserPostsURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                        "_value": "http://localhost:8888/api/myuser/posts/",
                        "dep": undefined,
                      },
                      "followingPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "loggedInUserPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                    "search": {
                      "categoryFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "searchPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "tagFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                  },
                  "_value": {
                    "Pagination Store": {
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                    },
                    "search": {
                      "categoryFilterPart": null,
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                  },
                  "dep": undefined,
                },
                "use": [Function],
              },
              "categoryFilterPart": null,
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "searchPart": null,
              "tagFilterPart": null,
            },
          },
          "directives": null,
          "ec": null,
          "effect": ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": [],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "parent": undefined,
            "scheduler": [Function],
          },
          "emit": [Function],
          "emitsOptions": null,
          "emitted": null,
          "exposeProxy": {},
          "exposed": {},
          "inheritAttrs": undefined,
          "isDeactivated": false,
          "isMounted": true,
          "isUnmounted": false,
          "m": null,
          "next": null,
          "parent": [Circular],
          "props": {},
          "propsDefaults": {},
          "propsOptions": [
            {},
            [],
          ],
          "provides": {},
          "proxy": {
            "_pStores": {
              "Pagination Store": {
                "$dispose": [Function],
                "$id": "Pagination Store",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "activeFetchURL",
                    "next_page",
                    "previous_page",
                    "last_page_link",
                    "all_pages_count",
                    "number_of_posts",
                    "current_page_number",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": {
                  "_a": [Circular],
                  "_e": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [],
                    "parent": undefined,
                    "scopes": [
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 0,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 1,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 2,
                        "parent": [Circular],
                      },
                    ],
                  },
                  "_p": [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "_s": Map {
                    "Store for containing posts and related to posts" => {
                      "$dispose": [Function],
                      "$id": "Store for containing posts and related to posts",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "posts",
                          "allComments",
                          "followingPosts",
                          "allTags",
                          "loggedInUserPosts",
                          "baseFetchURL",
                          "baseLoggedInUserPostsURL",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                    "search" => {
                      "$dispose": [Function],
                      "$id": "search",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "searchPart",
                          "categoryFilterPart",
                          "tagFilterPart",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "categoryFilterPart": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                    "Pagination Store" => [Circular],
                  },
                  "_testing": true,
                  "app": [Circular],
                  "install": [Function],
                  "state": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {
                      "Pagination Store": {
                        "activeFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "all_pages_count": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "current_page_number": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "last_page_link": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "next_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "number_of_posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "previous_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "allTags": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "baseFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "baseLoggedInUserPostsURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                          "_value": "http://localhost:8888/api/myuser/posts/",
                          "dep": undefined,
                        },
                        "followingPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "loggedInUserPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                      "search": {
                        "categoryFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "searchPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "tagFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                    },
                    "_value": {
                      "Pagination Store": {
                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                        "all_pages_count": 0,
                        "current_page_number": 0,
                        "last_page_link": "",
                        "next_page": "",
                        "number_of_posts": 0,
                        "previous_page": "",
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": null,
                        "allTags": null,
                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                        "followingPosts": null,
                        "loggedInUserPosts": null,
                        "posts": null,
                      },
                      "search": {
                        "categoryFilterPart": null,
                        "searchPart": null,
                        "tagFilterPart": null,
                      },
                    },
                    "dep": undefined,
                  },
                  "use": [Function],
                },
                "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
              "Store for containing posts and related to posts": {
                "$dispose": [Function],
                "$id": "Store for containing posts and related to posts",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "posts",
                    "allComments",
                    "followingPosts",
                    "allTags",
                    "loggedInUserPosts",
                    "baseFetchURL",
                    "baseLoggedInUserPostsURL",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": {
                  "_a": [Circular],
                  "_e": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [],
                    "parent": undefined,
                    "scopes": [
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 0,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 1,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 2,
                        "parent": [Circular],
                      },
                    ],
                  },
                  "_p": [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "_s": Map {
                    "Store for containing posts and related to posts" => [Circular],
                    "search" => {
                      "$dispose": [Function],
                      "$id": "search",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "searchPart",
                          "categoryFilterPart",
                          "tagFilterPart",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "categoryFilterPart": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                    "Pagination Store" => {
                      "$dispose": [Function],
                      "$id": "Pagination Store",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "activeFetchURL",
                          "next_page",
                          "previous_page",
                          "last_page_link",
                          "all_pages_count",
                          "number_of_posts",
                          "current_page_number",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                  "_testing": true,
                  "app": [Circular],
                  "install": [Function],
                  "state": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {
                      "Pagination Store": {
                        "activeFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "all_pages_count": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "current_page_number": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "last_page_link": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "next_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "number_of_posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "previous_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "allTags": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "baseFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "baseLoggedInUserPostsURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                          "_value": "http://localhost:8888/api/myuser/posts/",
                          "dep": undefined,
                        },
                        "followingPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "loggedInUserPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                      "search": {
                        "categoryFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "searchPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "tagFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                    },
                    "_value": {
                      "Pagination Store": {
                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                        "all_pages_count": 0,
                        "current_page_number": 0,
                        "last_page_link": "",
                        "next_page": "",
                        "number_of_posts": 0,
                        "previous_page": "",
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": null,
                        "allTags": null,
                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                        "followingPosts": null,
                        "loggedInUserPosts": null,
                        "posts": null,
                      },
                      "search": {
                        "categoryFilterPart": null,
                        "searchPart": null,
                        "tagFilterPart": null,
                      },
                    },
                    "dep": undefined,
                  },
                  "use": [Function],
                },
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
              "search": {
                "$dispose": [Function],
                "$id": "search",
                "$onAction": [Function],
                "$patch": [MockFunction $patch],
                "$reset": [MockFunction spy],
                "$subscribe": [Function],
                "_customProperties": Set {},
                "_hmrPayload": {
                  "actions": {
                    "resetStore": [Function],
                  },
                  "getters": {},
                  "hotState": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {},
                    "_value": {},
                    "dep": undefined,
                  },
                  "state": [
                    "searchPart",
                    "categoryFilterPart",
                    "tagFilterPart",
                  ],
                },
                "_hotUpdate": [Function],
                "_p": {
                  "_a": [Circular],
                  "_e": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [],
                    "parent": undefined,
                    "scopes": [
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 0,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 1,
                        "parent": [Circular],
                      },
                      EffectScope {
                        "_active": true,
                        "cleanups": [],
                        "detached": false,
                        "effects": [],
                        "index": 2,
                        "parent": [Circular],
                      },
                    ],
                  },
                  "_p": [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "_s": Map {
                    "Store for containing posts and related to posts" => {
                      "$dispose": [Function],
                      "$id": "Store for containing posts and related to posts",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "posts",
                          "allComments",
                          "followingPosts",
                          "allTags",
                          "loggedInUserPosts",
                          "baseFetchURL",
                          "baseLoggedInUserPostsURL",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                    "search" => [Circular],
                    "Pagination Store" => {
                      "$dispose": [Function],
                      "$id": "Pagination Store",
                      "$onAction": [Function],
                      "$patch": [MockFunction $patch],
                      "$reset": [MockFunction spy],
                      "$subscribe": [Function],
                      "_customProperties": Set {},
                      "_hmrPayload": {
                        "actions": {
                          "resetStore": [Function],
                        },
                        "getters": {},
                        "hotState": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {},
                          "_value": {},
                          "dep": undefined,
                        },
                        "state": [
                          "activeFetchURL",
                          "next_page",
                          "previous_page",
                          "last_page_link",
                          "all_pages_count",
                          "number_of_posts",
                          "current_page_number",
                        ],
                      },
                      "_hotUpdate": [Function],
                      "_p": [Circular],
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                      "resetStore": [MockFunction spy] {
                        "calls": [
                          [],
                          [],
                          [],
                        ],
                        "results": [
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                          {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                    },
                  },
                  "_testing": true,
                  "app": [Circular],
                  "install": [Function],
                  "state": RefImpl {
                    "__v_isRef": true,
                    "__v_isShallow": false,
                    "_rawValue": {
                      "Pagination Store": {
                        "activeFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "all_pages_count": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "current_page_number": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "last_page_link": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "next_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                        "number_of_posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": 0,
                          "_value": 0,
                          "dep": undefined,
                        },
                        "previous_page": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "",
                          "_value": "",
                          "dep": undefined,
                        },
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "allTags": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "baseFetchURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                          "_value": "http://localhost:8888/api/posts/feed/",
                          "dep": undefined,
                        },
                        "baseLoggedInUserPostsURL": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                          "_value": "http://localhost:8888/api/myuser/posts/",
                          "dep": undefined,
                        },
                        "followingPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "loggedInUserPosts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "posts": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                      "search": {
                        "categoryFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "searchPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                        "tagFilterPart": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": null,
                          "_value": null,
                          "dep": undefined,
                        },
                      },
                    },
                    "_value": {
                      "Pagination Store": {
                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                        "all_pages_count": 0,
                        "current_page_number": 0,
                        "last_page_link": "",
                        "next_page": "",
                        "number_of_posts": 0,
                        "previous_page": "",
                      },
                      "Store for containing posts and related to posts": {
                        "allComments": null,
                        "allTags": null,
                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                        "followingPosts": null,
                        "loggedInUserPosts": null,
                        "posts": null,
                      },
                      "search": {
                        "categoryFilterPart": null,
                        "searchPart": null,
                        "tagFilterPart": null,
                      },
                    },
                    "dep": undefined,
                  },
                  "use": [Function],
                },
                "categoryFilterPart": null,
                "resetStore": [MockFunction spy] {
                  "calls": [
                    [],
                    [],
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "searchPart": null,
                "tagFilterPart": null,
              },
            },
          },
          "refs": {},
          "render": [Function],
          "renderCache": [],
          "root": [Circular],
          "rtc": null,
          "rtg": null,
          "scope": EffectScope {
            "_active": true,
            "cleanups": [],
            "detached": true,
            "effects": [
              ReactiveEffect {
                "active": true,
                "allowRecurse": true,
                "deps": [],
                "fn": [Function],
                "onTrack": undefined,
                "onTrigger": undefined,
                "parent": undefined,
                "scheduler": [Function],
              },
            ],
            "parent": undefined,
          },
          "setupContext": {
            "attrs": {},
            "emit": [Function],
            "expose": [Function],
            "slots": {},
          },
          "setupState": {
            "paginationStore": {
              "$dispose": [Function],
              "$id": "Pagination Store",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "activeFetchURL",
                  "next_page",
                  "previous_page",
                  "last_page_link",
                  "all_pages_count",
                  "number_of_posts",
                  "current_page_number",
                ],
              },
              "_hotUpdate": [Function],
              "_p": {
                "_a": [Circular],
                "_e": EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": true,
                  "effects": [],
                  "parent": undefined,
                  "scopes": [
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 0,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 1,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 2,
                      "parent": [Circular],
                    },
                  ],
                },
                "_p": [
                  [Function],
                  [Function],
                  [Function],
                ],
                "_s": Map {
                  "Store for containing posts and related to posts" => {
                    "$dispose": [Function],
                    "$id": "Store for containing posts and related to posts",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "posts",
                        "allComments",
                        "followingPosts",
                        "allTags",
                        "loggedInUserPosts",
                        "baseFetchURL",
                        "baseLoggedInUserPostsURL",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "allComments": null,
                    "allTags": null,
                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                    "followingPosts": null,
                    "loggedInUserPosts": null,
                    "posts": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                  "search" => {
                    "$dispose": [Function],
                    "$id": "search",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "searchPart",
                        "categoryFilterPart",
                        "tagFilterPart",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "categoryFilterPart": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "searchPart": null,
                    "tagFilterPart": null,
                  },
                  "Pagination Store" => [Circular],
                },
                "_testing": true,
                "app": [Circular],
                "install": [Function],
                "state": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {
                    "Pagination Store": {
                      "activeFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "all_pages_count": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "current_page_number": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "last_page_link": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "next_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "number_of_posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "previous_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "allTags": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "baseFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "baseLoggedInUserPostsURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                        "_value": "http://localhost:8888/api/myuser/posts/",
                        "dep": undefined,
                      },
                      "followingPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "loggedInUserPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                    "search": {
                      "categoryFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "searchPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "tagFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                  },
                  "_value": {
                    "Pagination Store": {
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                    },
                    "search": {
                      "categoryFilterPart": null,
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                  },
                  "dep": undefined,
                },
                "use": [Function],
              },
              "activeFetchURL": "http://localhost:8888/api/posts/feed/",
              "all_pages_count": 0,
              "current_page_number": 0,
              "last_page_link": "",
              "next_page": "",
              "number_of_posts": 0,
              "previous_page": "",
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            },
            "postStore": {
              "$dispose": [Function],
              "$id": "Store for containing posts and related to posts",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "posts",
                  "allComments",
                  "followingPosts",
                  "allTags",
                  "loggedInUserPosts",
                  "baseFetchURL",
                  "baseLoggedInUserPostsURL",
                ],
              },
              "_hotUpdate": [Function],
              "_p": {
                "_a": [Circular],
                "_e": EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": true,
                  "effects": [],
                  "parent": undefined,
                  "scopes": [
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 0,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 1,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 2,
                      "parent": [Circular],
                    },
                  ],
                },
                "_p": [
                  [Function],
                  [Function],
                  [Function],
                ],
                "_s": Map {
                  "Store for containing posts and related to posts" => [Circular],
                  "search" => {
                    "$dispose": [Function],
                    "$id": "search",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "searchPart",
                        "categoryFilterPart",
                        "tagFilterPart",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "categoryFilterPart": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "searchPart": null,
                    "tagFilterPart": null,
                  },
                  "Pagination Store" => {
                    "$dispose": [Function],
                    "$id": "Pagination Store",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "activeFetchURL",
                        "next_page",
                        "previous_page",
                        "last_page_link",
                        "all_pages_count",
                        "number_of_posts",
                        "current_page_number",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                    "all_pages_count": 0,
                    "current_page_number": 0,
                    "last_page_link": "",
                    "next_page": "",
                    "number_of_posts": 0,
                    "previous_page": "",
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
                "_testing": true,
                "app": [Circular],
                "install": [Function],
                "state": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {
                    "Pagination Store": {
                      "activeFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "all_pages_count": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "current_page_number": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "last_page_link": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "next_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "number_of_posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "previous_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "allTags": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "baseFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "baseLoggedInUserPostsURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                        "_value": "http://localhost:8888/api/myuser/posts/",
                        "dep": undefined,
                      },
                      "followingPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "loggedInUserPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                    "search": {
                      "categoryFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "searchPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "tagFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                  },
                  "_value": {
                    "Pagination Store": {
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                    },
                    "search": {
                      "categoryFilterPart": null,
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                  },
                  "dep": undefined,
                },
                "use": [Function],
              },
              "allComments": null,
              "allTags": null,
              "baseFetchURL": "http://localhost:8888/api/posts/feed/",
              "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
              "followingPosts": null,
              "loggedInUserPosts": null,
              "posts": null,
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            },
            "searchStore": {
              "$dispose": [Function],
              "$id": "search",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "searchPart",
                  "categoryFilterPart",
                  "tagFilterPart",
                ],
              },
              "_hotUpdate": [Function],
              "_p": {
                "_a": [Circular],
                "_e": EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": true,
                  "effects": [],
                  "parent": undefined,
                  "scopes": [
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 0,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 1,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 2,
                      "parent": [Circular],
                    },
                  ],
                },
                "_p": [
                  [Function],
                  [Function],
                  [Function],
                ],
                "_s": Map {
                  "Store for containing posts and related to posts" => {
                    "$dispose": [Function],
                    "$id": "Store for containing posts and related to posts",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "posts",
                        "allComments",
                        "followingPosts",
                        "allTags",
                        "loggedInUserPosts",
                        "baseFetchURL",
                        "baseLoggedInUserPostsURL",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "allComments": null,
                    "allTags": null,
                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                    "followingPosts": null,
                    "loggedInUserPosts": null,
                    "posts": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                  "search" => [Circular],
                  "Pagination Store" => {
                    "$dispose": [Function],
                    "$id": "Pagination Store",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "activeFetchURL",
                        "next_page",
                        "previous_page",
                        "last_page_link",
                        "all_pages_count",
                        "number_of_posts",
                        "current_page_number",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                    "all_pages_count": 0,
                    "current_page_number": 0,
                    "last_page_link": "",
                    "next_page": "",
                    "number_of_posts": 0,
                    "previous_page": "",
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
                "_testing": true,
                "app": [Circular],
                "install": [Function],
                "state": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {
                    "Pagination Store": {
                      "activeFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "all_pages_count": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "current_page_number": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "last_page_link": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "next_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "number_of_posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "previous_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "allTags": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "baseFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "baseLoggedInUserPostsURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                        "_value": "http://localhost:8888/api/myuser/posts/",
                        "dep": undefined,
                      },
                      "followingPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "loggedInUserPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                    "search": {
                      "categoryFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "searchPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "tagFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                  },
                  "_value": {
                    "Pagination Store": {
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                    },
                    "search": {
                      "categoryFilterPart": null,
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                  },
                  "dep": undefined,
                },
                "use": [Function],
              },
              "categoryFilterPart": null,
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "searchPart": null,
              "tagFilterPart": null,
            },
          },
          "slots": {},
          "slotsProxy": {},
          "sp": null,
          "subTree": {
            "__v_isVNode": true,
            "__v_skip": true,
            "anchor": ,
            "appContext": null,
            "children": [
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": [
                  {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": [
                      {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": {
                          "a": null,
                          "accessCache": {},
                          "appContext": {
                            "app": [Circular],
                            "components": {
                              "FeedMain": {
                                "name": "FeedMain",
                              },
                              "FeedSidebar": {
                                "name": "FeedSidebar",
                              },
                              "transition": {
                                "name": "transition",
                              },
                              "transition-group": {
                                "name": "transition-group",
                              },
                            },
                            "config": {
                              "compilerOptions": {},
                              "errorHandler": undefined,
                              "globalProperties": {
                                "$pinia": {
                                  "_a": [Circular],
                                  "_e": EffectScope {
                                    "_active": true,
                                    "cleanups": [],
                                    "detached": true,
                                    "effects": [],
                                    "parent": undefined,
                                    "scopes": [
                                      EffectScope {
                                        "_active": true,
                                        "cleanups": [],
                                        "detached": false,
                                        "effects": [],
                                        "index": 0,
                                        "parent": [Circular],
                                      },
                                      EffectScope {
                                        "_active": true,
                                        "cleanups": [],
                                        "detached": false,
                                        "effects": [],
                                        "index": 1,
                                        "parent": [Circular],
                                      },
                                      EffectScope {
                                        "_active": true,
                                        "cleanups": [],
                                        "detached": false,
                                        "effects": [],
                                        "index": 2,
                                        "parent": [Circular],
                                      },
                                    ],
                                  },
                                  "_p": [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "_s": Map {
                                    "Store for containing posts and related to posts" => {
                                      "$dispose": [Function],
                                      "$id": "Store for containing posts and related to posts",
                                      "$onAction": [Function],
                                      "$patch": [MockFunction $patch],
                                      "$reset": [MockFunction spy],
                                      "$subscribe": [Function],
                                      "_customProperties": Set {},
                                      "_hmrPayload": {
                                        "actions": {
                                          "resetStore": [Function],
                                        },
                                        "getters": {},
                                        "hotState": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": {},
                                          "_value": {},
                                          "dep": undefined,
                                        },
                                        "state": [
                                          "posts",
                                          "allComments",
                                          "followingPosts",
                                          "allTags",
                                          "loggedInUserPosts",
                                          "baseFetchURL",
                                          "baseLoggedInUserPostsURL",
                                        ],
                                      },
                                      "_hotUpdate": [Function],
                                      "_p": [Circular],
                                      "allComments": null,
                                      "allTags": null,
                                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                      "followingPosts": null,
                                      "loggedInUserPosts": null,
                                      "posts": null,
                                      "resetStore": [MockFunction spy] {
                                        "calls": [
                                          [],
                                          [],
                                          [],
                                        ],
                                        "results": [
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                    },
                                    "search" => {
                                      "$dispose": [Function],
                                      "$id": "search",
                                      "$onAction": [Function],
                                      "$patch": [MockFunction $patch],
                                      "$reset": [MockFunction spy],
                                      "$subscribe": [Function],
                                      "_customProperties": Set {},
                                      "_hmrPayload": {
                                        "actions": {
                                          "resetStore": [Function],
                                        },
                                        "getters": {},
                                        "hotState": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": {},
                                          "_value": {},
                                          "dep": undefined,
                                        },
                                        "state": [
                                          "searchPart",
                                          "categoryFilterPart",
                                          "tagFilterPart",
                                        ],
                                      },
                                      "_hotUpdate": [Function],
                                      "_p": [Circular],
                                      "categoryFilterPart": null,
                                      "resetStore": [MockFunction spy] {
                                        "calls": [
                                          [],
                                          [],
                                          [],
                                        ],
                                        "results": [
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "searchPart": null,
                                      "tagFilterPart": null,
                                    },
                                    "Pagination Store" => {
                                      "$dispose": [Function],
                                      "$id": "Pagination Store",
                                      "$onAction": [Function],
                                      "$patch": [MockFunction $patch],
                                      "$reset": [MockFunction spy],
                                      "$subscribe": [Function],
                                      "_customProperties": Set {},
                                      "_hmrPayload": {
                                        "actions": {
                                          "resetStore": [Function],
                                        },
                                        "getters": {},
                                        "hotState": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": {},
                                          "_value": {},
                                          "dep": undefined,
                                        },
                                        "state": [
                                          "activeFetchURL",
                                          "next_page",
                                          "previous_page",
                                          "last_page_link",
                                          "all_pages_count",
                                          "number_of_posts",
                                          "current_page_number",
                                        ],
                                      },
                                      "_hotUpdate": [Function],
                                      "_p": [Circular],
                                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                      "all_pages_count": 0,
                                      "current_page_number": 0,
                                      "last_page_link": "",
                                      "next_page": "",
                                      "number_of_posts": 0,
                                      "previous_page": "",
                                      "resetStore": [MockFunction spy] {
                                        "calls": [
                                          [],
                                          [],
                                          [],
                                        ],
                                        "results": [
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "_testing": true,
                                  "app": [Circular],
                                  "install": [Function],
                                  "state": RefImpl {
                                    "__v_isRef": true,
                                    "__v_isShallow": false,
                                    "_rawValue": {
                                      "Pagination Store": {
                                        "activeFetchURL": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                                          "_value": "http://localhost:8888/api/posts/feed/",
                                          "dep": undefined,
                                        },
                                        "all_pages_count": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": 0,
                                          "_value": 0,
                                          "dep": undefined,
                                        },
                                        "current_page_number": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": 0,
                                          "_value": 0,
                                          "dep": undefined,
                                        },
                                        "last_page_link": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "",
                                          "_value": "",
                                          "dep": undefined,
                                        },
                                        "next_page": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "",
                                          "_value": "",
                                          "dep": undefined,
                                        },
                                        "number_of_posts": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": 0,
                                          "_value": 0,
                                          "dep": undefined,
                                        },
                                        "previous_page": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "",
                                          "_value": "",
                                          "dep": undefined,
                                        },
                                      },
                                      "Store for containing posts and related to posts": {
                                        "allComments": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "allTags": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "baseFetchURL": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                                          "_value": "http://localhost:8888/api/posts/feed/",
                                          "dep": undefined,
                                        },
                                        "baseLoggedInUserPostsURL": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                                          "_value": "http://localhost:8888/api/myuser/posts/",
                                          "dep": undefined,
                                        },
                                        "followingPosts": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "loggedInUserPosts": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "posts": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                      },
                                      "search": {
                                        "categoryFilterPart": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "searchPart": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "tagFilterPart": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                      },
                                    },
                                    "_value": {
                                      "Pagination Store": {
                                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                        "all_pages_count": 0,
                                        "current_page_number": 0,
                                        "last_page_link": "",
                                        "next_page": "",
                                        "number_of_posts": 0,
                                        "previous_page": "",
                                      },
                                      "Store for containing posts and related to posts": {
                                        "allComments": null,
                                        "allTags": null,
                                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                        "followingPosts": null,
                                        "loggedInUserPosts": null,
                                        "posts": null,
                                      },
                                      "search": {
                                        "categoryFilterPart": null,
                                        "searchPart": null,
                                        "tagFilterPart": null,
                                      },
                                    },
                                    "dep": undefined,
                                  },
                                  "use": [Function],
                                },
                              },
                              "isNativeTag": [Function],
                              "optionMergeStrategies": {},
                              "performance": false,
                              "warnHandler": undefined,
                            },
                            "directives": {},
                            "emitsCache": WeakMap {},
                            "mixins": [
                              {
                                "beforeCreate": [Function],
                              },
                            ],
                            "optionsCache": WeakMap {},
                            "propsCache": WeakMap {},
                            "provides": {
                              Symbol(pinia): {
                                "_a": [Circular],
                                "_e": EffectScope {
                                  "_active": true,
                                  "cleanups": [],
                                  "detached": true,
                                  "effects": [],
                                  "parent": undefined,
                                  "scopes": [
                                    EffectScope {
                                      "_active": true,
                                      "cleanups": [],
                                      "detached": false,
                                      "effects": [],
                                      "index": 0,
                                      "parent": [Circular],
                                    },
                                    EffectScope {
                                      "_active": true,
                                      "cleanups": [],
                                      "detached": false,
                                      "effects": [],
                                      "index": 1,
                                      "parent": [Circular],
                                    },
                                    EffectScope {
                                      "_active": true,
                                      "cleanups": [],
                                      "detached": false,
                                      "effects": [],
                                      "index": 2,
                                      "parent": [Circular],
                                    },
                                  ],
                                },
                                "_p": [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "_s": Map {
                                  "Store for containing posts and related to posts" => {
                                    "$dispose": [Function],
                                    "$id": "Store for containing posts and related to posts",
                                    "$onAction": [Function],
                                    "$patch": [MockFunction $patch],
                                    "$reset": [MockFunction spy],
                                    "$subscribe": [Function],
                                    "_customProperties": Set {},
                                    "_hmrPayload": {
                                      "actions": {
                                        "resetStore": [Function],
                                      },
                                      "getters": {},
                                      "hotState": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": {},
                                        "_value": {},
                                        "dep": undefined,
                                      },
                                      "state": [
                                        "posts",
                                        "allComments",
                                        "followingPosts",
                                        "allTags",
                                        "loggedInUserPosts",
                                        "baseFetchURL",
                                        "baseLoggedInUserPostsURL",
                                      ],
                                    },
                                    "_hotUpdate": [Function],
                                    "_p": [Circular],
                                    "allComments": null,
                                    "allTags": null,
                                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                    "followingPosts": null,
                                    "loggedInUserPosts": null,
                                    "posts": null,
                                    "resetStore": [MockFunction spy] {
                                      "calls": [
                                        [],
                                        [],
                                        [],
                                      ],
                                      "results": [
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                  },
                                  "search" => {
                                    "$dispose": [Function],
                                    "$id": "search",
                                    "$onAction": [Function],
                                    "$patch": [MockFunction $patch],
                                    "$reset": [MockFunction spy],
                                    "$subscribe": [Function],
                                    "_customProperties": Set {},
                                    "_hmrPayload": {
                                      "actions": {
                                        "resetStore": [Function],
                                      },
                                      "getters": {},
                                      "hotState": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": {},
                                        "_value": {},
                                        "dep": undefined,
                                      },
                                      "state": [
                                        "searchPart",
                                        "categoryFilterPart",
                                        "tagFilterPart",
                                      ],
                                    },
                                    "_hotUpdate": [Function],
                                    "_p": [Circular],
                                    "categoryFilterPart": null,
                                    "resetStore": [MockFunction spy] {
                                      "calls": [
                                        [],
                                        [],
                                        [],
                                      ],
                                      "results": [
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "searchPart": null,
                                    "tagFilterPart": null,
                                  },
                                  "Pagination Store" => {
                                    "$dispose": [Function],
                                    "$id": "Pagination Store",
                                    "$onAction": [Function],
                                    "$patch": [MockFunction $patch],
                                    "$reset": [MockFunction spy],
                                    "$subscribe": [Function],
                                    "_customProperties": Set {},
                                    "_hmrPayload": {
                                      "actions": {
                                        "resetStore": [Function],
                                      },
                                      "getters": {},
                                      "hotState": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": {},
                                        "_value": {},
                                        "dep": undefined,
                                      },
                                      "state": [
                                        "activeFetchURL",
                                        "next_page",
                                        "previous_page",
                                        "last_page_link",
                                        "all_pages_count",
                                        "number_of_posts",
                                        "current_page_number",
                                      ],
                                    },
                                    "_hotUpdate": [Function],
                                    "_p": [Circular],
                                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                    "all_pages_count": 0,
                                    "current_page_number": 0,
                                    "last_page_link": "",
                                    "next_page": "",
                                    "number_of_posts": 0,
                                    "previous_page": "",
                                    "resetStore": [MockFunction spy] {
                                      "calls": [
                                        [],
                                        [],
                                        [],
                                      ],
                                      "results": [
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                  },
                                },
                                "_testing": true,
                                "app": [Circular],
                                "install": [Function],
                                "state": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": {
                                    "Pagination Store": {
                                      "activeFetchURL": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                                        "_value": "http://localhost:8888/api/posts/feed/",
                                        "dep": undefined,
                                      },
                                      "all_pages_count": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": 0,
                                        "_value": 0,
                                        "dep": undefined,
                                      },
                                      "current_page_number": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": 0,
                                        "_value": 0,
                                        "dep": undefined,
                                      },
                                      "last_page_link": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "",
                                        "_value": "",
                                        "dep": undefined,
                                      },
                                      "next_page": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "",
                                        "_value": "",
                                        "dep": undefined,
                                      },
                                      "number_of_posts": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": 0,
                                        "_value": 0,
                                        "dep": undefined,
                                      },
                                      "previous_page": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "",
                                        "_value": "",
                                        "dep": undefined,
                                      },
                                    },
                                    "Store for containing posts and related to posts": {
                                      "allComments": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "allTags": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "baseFetchURL": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                                        "_value": "http://localhost:8888/api/posts/feed/",
                                        "dep": undefined,
                                      },
                                      "baseLoggedInUserPostsURL": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                                        "_value": "http://localhost:8888/api/myuser/posts/",
                                        "dep": undefined,
                                      },
                                      "followingPosts": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "loggedInUserPosts": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "posts": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                    },
                                    "search": {
                                      "categoryFilterPart": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "searchPart": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "tagFilterPart": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                    },
                                  },
                                  "_value": {
                                    "Pagination Store": {
                                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                      "all_pages_count": 0,
                                      "current_page_number": 0,
                                      "last_page_link": "",
                                      "next_page": "",
                                      "number_of_posts": 0,
                                      "previous_page": "",
                                    },
                                    "Store for containing posts and related to posts": {
                                      "allComments": null,
                                      "allTags": null,
                                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                      "followingPosts": null,
                                      "loggedInUserPosts": null,
                                      "posts": null,
                                    },
                                    "search": {
                                      "categoryFilterPart": null,
                                      "searchPart": null,
                                      "tagFilterPart": null,
                                    },
                                  },
                                  "dep": undefined,
                                },
                                "use": [Function],
                              },
                            },
                            "reload": [Function],
                          },
                          "asyncDep": null,
                          "asyncResolved": false,
                          "attrs": {},
                          "attrsProxy": null,
                          "bc": null,
                          "bm": null,
                          "bu": null,
                          "bum": null,
                          "c": null,
                          "components": null,
                          "ctx": {},
                          "da": null,
                          "data": {},
                          "directives": null,
                          "ec": null,
                          "effect": ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": [
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          "emit": [Function],
                          "emitsOptions": null,
                          "emitted": null,
                          "exposeProxy": null,
                          "exposed": null,
                          "inheritAttrs": undefined,
                          "isDeactivated": false,
                          "isMounted": true,
                          "isUnmounted": false,
                          "m": null,
                          "next": null,
                          "parent": [Circular],
                          "props": {},
                          "propsDefaults": {},
                          "propsOptions": [
                            {},
                            [],
                          ],
                          "provides": {},
                          "proxy": {},
                          "refs": {},
                          "render": [Function],
                          "renderCache": [],
                          "root": [Circular],
                          "rtc": null,
                          "rtg": null,
                          "scope": EffectScope {
                            "_active": true,
                            "cleanups": [],
                            "detached": true,
                            "effects": [
                              ReactiveEffect {
                                "active": true,
                                "allowRecurse": true,
                                "deps": [
                                  Set {
                                    [Circular],
                                  },
                                ],
                                "fn": [Function],
                                "onTrack": undefined,
                                "onTrigger": undefined,
                                "parent": undefined,
                                "scheduler": [Function],
                              },
                            ],
                            "parent": undefined,
                          },
                          "setupContext": {
                            "attrs": {},
                            "emit": [Function],
                            "expose": [Function],
                            "slots": {},
                          },
                          "setupState": {},
                          "slots": {},
                          "slotsProxy": {},
                          "sp": null,
                          "subTree": {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": null,
                            "component": null,
                            "ctx": [Circular],
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <feed-main-stub />,
                            "key": null,
                            "patchFlag": 0,
                            "props": {},
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 1,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "feed-main-stub",
                          },
                          "suspense": null,
                          "suspenseId": 0,
                          "type": {
                            "model": undefined,
                            "name": "FeedMain",
                            "props": {},
                            "setup": [Function],
                          },
                          "u": null,
                          "uid": 14,
                          "um": null,
                          "update": [Function],
                          "vnode": [Circular],
                          "withProxy": null,
                        },
                        "ctx": [Circular],
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <feed-main-stub />,
                        "key": null,
                        "patchFlag": 0,
                        "props": null,
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 4,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": {
                          "model": undefined,
                          "name": "FeedMain",
                          "props": {},
                          "setup": [Function],
                        },
                      },
                    ],
                    "component": null,
                    "ctx": [Circular],
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="col-span-6 mx-auto w-full"
                      data-test="everything"
                    >
                      <feed-main-stub />
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": {
                      "class": "col-span-6 mx-auto w-full",
                      "data-test": "everything",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": [
                      {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": {
                          "a": null,
                          "accessCache": {},
                          "appContext": {
                            "app": [Circular],
                            "components": {
                              "FeedMain": {
                                "name": "FeedMain",
                              },
                              "FeedSidebar": {
                                "name": "FeedSidebar",
                              },
                              "transition": {
                                "name": "transition",
                              },
                              "transition-group": {
                                "name": "transition-group",
                              },
                            },
                            "config": {
                              "compilerOptions": {},
                              "errorHandler": undefined,
                              "globalProperties": {
                                "$pinia": {
                                  "_a": [Circular],
                                  "_e": EffectScope {
                                    "_active": true,
                                    "cleanups": [],
                                    "detached": true,
                                    "effects": [],
                                    "parent": undefined,
                                    "scopes": [
                                      EffectScope {
                                        "_active": true,
                                        "cleanups": [],
                                        "detached": false,
                                        "effects": [],
                                        "index": 0,
                                        "parent": [Circular],
                                      },
                                      EffectScope {
                                        "_active": true,
                                        "cleanups": [],
                                        "detached": false,
                                        "effects": [],
                                        "index": 1,
                                        "parent": [Circular],
                                      },
                                      EffectScope {
                                        "_active": true,
                                        "cleanups": [],
                                        "detached": false,
                                        "effects": [],
                                        "index": 2,
                                        "parent": [Circular],
                                      },
                                    ],
                                  },
                                  "_p": [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "_s": Map {
                                    "Store for containing posts and related to posts" => {
                                      "$dispose": [Function],
                                      "$id": "Store for containing posts and related to posts",
                                      "$onAction": [Function],
                                      "$patch": [MockFunction $patch],
                                      "$reset": [MockFunction spy],
                                      "$subscribe": [Function],
                                      "_customProperties": Set {},
                                      "_hmrPayload": {
                                        "actions": {
                                          "resetStore": [Function],
                                        },
                                        "getters": {},
                                        "hotState": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": {},
                                          "_value": {},
                                          "dep": undefined,
                                        },
                                        "state": [
                                          "posts",
                                          "allComments",
                                          "followingPosts",
                                          "allTags",
                                          "loggedInUserPosts",
                                          "baseFetchURL",
                                          "baseLoggedInUserPostsURL",
                                        ],
                                      },
                                      "_hotUpdate": [Function],
                                      "_p": [Circular],
                                      "allComments": null,
                                      "allTags": null,
                                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                      "followingPosts": null,
                                      "loggedInUserPosts": null,
                                      "posts": null,
                                      "resetStore": [MockFunction spy] {
                                        "calls": [
                                          [],
                                          [],
                                          [],
                                        ],
                                        "results": [
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                    },
                                    "search" => {
                                      "$dispose": [Function],
                                      "$id": "search",
                                      "$onAction": [Function],
                                      "$patch": [MockFunction $patch],
                                      "$reset": [MockFunction spy],
                                      "$subscribe": [Function],
                                      "_customProperties": Set {},
                                      "_hmrPayload": {
                                        "actions": {
                                          "resetStore": [Function],
                                        },
                                        "getters": {},
                                        "hotState": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": {},
                                          "_value": {},
                                          "dep": undefined,
                                        },
                                        "state": [
                                          "searchPart",
                                          "categoryFilterPart",
                                          "tagFilterPart",
                                        ],
                                      },
                                      "_hotUpdate": [Function],
                                      "_p": [Circular],
                                      "categoryFilterPart": null,
                                      "resetStore": [MockFunction spy] {
                                        "calls": [
                                          [],
                                          [],
                                          [],
                                        ],
                                        "results": [
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "searchPart": null,
                                      "tagFilterPart": null,
                                    },
                                    "Pagination Store" => {
                                      "$dispose": [Function],
                                      "$id": "Pagination Store",
                                      "$onAction": [Function],
                                      "$patch": [MockFunction $patch],
                                      "$reset": [MockFunction spy],
                                      "$subscribe": [Function],
                                      "_customProperties": Set {},
                                      "_hmrPayload": {
                                        "actions": {
                                          "resetStore": [Function],
                                        },
                                        "getters": {},
                                        "hotState": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": {},
                                          "_value": {},
                                          "dep": undefined,
                                        },
                                        "state": [
                                          "activeFetchURL",
                                          "next_page",
                                          "previous_page",
                                          "last_page_link",
                                          "all_pages_count",
                                          "number_of_posts",
                                          "current_page_number",
                                        ],
                                      },
                                      "_hotUpdate": [Function],
                                      "_p": [Circular],
                                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                      "all_pages_count": 0,
                                      "current_page_number": 0,
                                      "last_page_link": "",
                                      "next_page": "",
                                      "number_of_posts": 0,
                                      "previous_page": "",
                                      "resetStore": [MockFunction spy] {
                                        "calls": [
                                          [],
                                          [],
                                          [],
                                        ],
                                        "results": [
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "_testing": true,
                                  "app": [Circular],
                                  "install": [Function],
                                  "state": RefImpl {
                                    "__v_isRef": true,
                                    "__v_isShallow": false,
                                    "_rawValue": {
                                      "Pagination Store": {
                                        "activeFetchURL": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                                          "_value": "http://localhost:8888/api/posts/feed/",
                                          "dep": undefined,
                                        },
                                        "all_pages_count": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": 0,
                                          "_value": 0,
                                          "dep": undefined,
                                        },
                                        "current_page_number": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": 0,
                                          "_value": 0,
                                          "dep": undefined,
                                        },
                                        "last_page_link": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "",
                                          "_value": "",
                                          "dep": undefined,
                                        },
                                        "next_page": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "",
                                          "_value": "",
                                          "dep": undefined,
                                        },
                                        "number_of_posts": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": 0,
                                          "_value": 0,
                                          "dep": undefined,
                                        },
                                        "previous_page": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "",
                                          "_value": "",
                                          "dep": undefined,
                                        },
                                      },
                                      "Store for containing posts and related to posts": {
                                        "allComments": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "allTags": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "baseFetchURL": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "http://localhost:8888/api/posts/feed/",
                                          "_value": "http://localhost:8888/api/posts/feed/",
                                          "dep": undefined,
                                        },
                                        "baseLoggedInUserPostsURL": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": "http://localhost:8888/api/myuser/posts/",
                                          "_value": "http://localhost:8888/api/myuser/posts/",
                                          "dep": undefined,
                                        },
                                        "followingPosts": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "loggedInUserPosts": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "posts": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                      },
                                      "search": {
                                        "categoryFilterPart": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "searchPart": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                        "tagFilterPart": RefImpl {
                                          "__v_isRef": true,
                                          "__v_isShallow": false,
                                          "_rawValue": null,
                                          "_value": null,
                                          "dep": undefined,
                                        },
                                      },
                                    },
                                    "_value": {
                                      "Pagination Store": {
                                        "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                        "all_pages_count": 0,
                                        "current_page_number": 0,
                                        "last_page_link": "",
                                        "next_page": "",
                                        "number_of_posts": 0,
                                        "previous_page": "",
                                      },
                                      "Store for containing posts and related to posts": {
                                        "allComments": null,
                                        "allTags": null,
                                        "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                        "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                        "followingPosts": null,
                                        "loggedInUserPosts": null,
                                        "posts": null,
                                      },
                                      "search": {
                                        "categoryFilterPart": null,
                                        "searchPart": null,
                                        "tagFilterPart": null,
                                      },
                                    },
                                    "dep": undefined,
                                  },
                                  "use": [Function],
                                },
                              },
                              "isNativeTag": [Function],
                              "optionMergeStrategies": {},
                              "performance": false,
                              "warnHandler": undefined,
                            },
                            "directives": {},
                            "emitsCache": WeakMap {},
                            "mixins": [
                              {
                                "beforeCreate": [Function],
                              },
                            ],
                            "optionsCache": WeakMap {},
                            "propsCache": WeakMap {},
                            "provides": {
                              Symbol(pinia): {
                                "_a": [Circular],
                                "_e": EffectScope {
                                  "_active": true,
                                  "cleanups": [],
                                  "detached": true,
                                  "effects": [],
                                  "parent": undefined,
                                  "scopes": [
                                    EffectScope {
                                      "_active": true,
                                      "cleanups": [],
                                      "detached": false,
                                      "effects": [],
                                      "index": 0,
                                      "parent": [Circular],
                                    },
                                    EffectScope {
                                      "_active": true,
                                      "cleanups": [],
                                      "detached": false,
                                      "effects": [],
                                      "index": 1,
                                      "parent": [Circular],
                                    },
                                    EffectScope {
                                      "_active": true,
                                      "cleanups": [],
                                      "detached": false,
                                      "effects": [],
                                      "index": 2,
                                      "parent": [Circular],
                                    },
                                  ],
                                },
                                "_p": [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "_s": Map {
                                  "Store for containing posts and related to posts" => {
                                    "$dispose": [Function],
                                    "$id": "Store for containing posts and related to posts",
                                    "$onAction": [Function],
                                    "$patch": [MockFunction $patch],
                                    "$reset": [MockFunction spy],
                                    "$subscribe": [Function],
                                    "_customProperties": Set {},
                                    "_hmrPayload": {
                                      "actions": {
                                        "resetStore": [Function],
                                      },
                                      "getters": {},
                                      "hotState": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": {},
                                        "_value": {},
                                        "dep": undefined,
                                      },
                                      "state": [
                                        "posts",
                                        "allComments",
                                        "followingPosts",
                                        "allTags",
                                        "loggedInUserPosts",
                                        "baseFetchURL",
                                        "baseLoggedInUserPostsURL",
                                      ],
                                    },
                                    "_hotUpdate": [Function],
                                    "_p": [Circular],
                                    "allComments": null,
                                    "allTags": null,
                                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                    "followingPosts": null,
                                    "loggedInUserPosts": null,
                                    "posts": null,
                                    "resetStore": [MockFunction spy] {
                                      "calls": [
                                        [],
                                        [],
                                        [],
                                      ],
                                      "results": [
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                  },
                                  "search" => {
                                    "$dispose": [Function],
                                    "$id": "search",
                                    "$onAction": [Function],
                                    "$patch": [MockFunction $patch],
                                    "$reset": [MockFunction spy],
                                    "$subscribe": [Function],
                                    "_customProperties": Set {},
                                    "_hmrPayload": {
                                      "actions": {
                                        "resetStore": [Function],
                                      },
                                      "getters": {},
                                      "hotState": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": {},
                                        "_value": {},
                                        "dep": undefined,
                                      },
                                      "state": [
                                        "searchPart",
                                        "categoryFilterPart",
                                        "tagFilterPart",
                                      ],
                                    },
                                    "_hotUpdate": [Function],
                                    "_p": [Circular],
                                    "categoryFilterPart": null,
                                    "resetStore": [MockFunction spy] {
                                      "calls": [
                                        [],
                                        [],
                                        [],
                                      ],
                                      "results": [
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "searchPart": null,
                                    "tagFilterPart": null,
                                  },
                                  "Pagination Store" => {
                                    "$dispose": [Function],
                                    "$id": "Pagination Store",
                                    "$onAction": [Function],
                                    "$patch": [MockFunction $patch],
                                    "$reset": [MockFunction spy],
                                    "$subscribe": [Function],
                                    "_customProperties": Set {},
                                    "_hmrPayload": {
                                      "actions": {
                                        "resetStore": [Function],
                                      },
                                      "getters": {},
                                      "hotState": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": {},
                                        "_value": {},
                                        "dep": undefined,
                                      },
                                      "state": [
                                        "activeFetchURL",
                                        "next_page",
                                        "previous_page",
                                        "last_page_link",
                                        "all_pages_count",
                                        "number_of_posts",
                                        "current_page_number",
                                      ],
                                    },
                                    "_hotUpdate": [Function],
                                    "_p": [Circular],
                                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                    "all_pages_count": 0,
                                    "current_page_number": 0,
                                    "last_page_link": "",
                                    "next_page": "",
                                    "number_of_posts": 0,
                                    "previous_page": "",
                                    "resetStore": [MockFunction spy] {
                                      "calls": [
                                        [],
                                        [],
                                        [],
                                      ],
                                      "results": [
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                  },
                                },
                                "_testing": true,
                                "app": [Circular],
                                "install": [Function],
                                "state": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": {
                                    "Pagination Store": {
                                      "activeFetchURL": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                                        "_value": "http://localhost:8888/api/posts/feed/",
                                        "dep": undefined,
                                      },
                                      "all_pages_count": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": 0,
                                        "_value": 0,
                                        "dep": undefined,
                                      },
                                      "current_page_number": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": 0,
                                        "_value": 0,
                                        "dep": undefined,
                                      },
                                      "last_page_link": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "",
                                        "_value": "",
                                        "dep": undefined,
                                      },
                                      "next_page": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "",
                                        "_value": "",
                                        "dep": undefined,
                                      },
                                      "number_of_posts": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": 0,
                                        "_value": 0,
                                        "dep": undefined,
                                      },
                                      "previous_page": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "",
                                        "_value": "",
                                        "dep": undefined,
                                      },
                                    },
                                    "Store for containing posts and related to posts": {
                                      "allComments": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "allTags": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "baseFetchURL": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                                        "_value": "http://localhost:8888/api/posts/feed/",
                                        "dep": undefined,
                                      },
                                      "baseLoggedInUserPostsURL": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                                        "_value": "http://localhost:8888/api/myuser/posts/",
                                        "dep": undefined,
                                      },
                                      "followingPosts": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "loggedInUserPosts": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "posts": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                    },
                                    "search": {
                                      "categoryFilterPart": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "searchPart": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                      "tagFilterPart": RefImpl {
                                        "__v_isRef": true,
                                        "__v_isShallow": false,
                                        "_rawValue": null,
                                        "_value": null,
                                        "dep": undefined,
                                      },
                                    },
                                  },
                                  "_value": {
                                    "Pagination Store": {
                                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                      "all_pages_count": 0,
                                      "current_page_number": 0,
                                      "last_page_link": "",
                                      "next_page": "",
                                      "number_of_posts": 0,
                                      "previous_page": "",
                                    },
                                    "Store for containing posts and related to posts": {
                                      "allComments": null,
                                      "allTags": null,
                                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                      "followingPosts": null,
                                      "loggedInUserPosts": null,
                                      "posts": null,
                                    },
                                    "search": {
                                      "categoryFilterPart": null,
                                      "searchPart": null,
                                      "tagFilterPart": null,
                                    },
                                  },
                                  "dep": undefined,
                                },
                                "use": [Function],
                              },
                            },
                            "reload": [Function],
                          },
                          "asyncDep": null,
                          "asyncResolved": false,
                          "attrs": {},
                          "attrsProxy": null,
                          "bc": null,
                          "bm": null,
                          "bu": null,
                          "bum": null,
                          "c": null,
                          "components": null,
                          "ctx": {},
                          "da": null,
                          "data": {},
                          "directives": null,
                          "ec": null,
                          "effect": ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": [
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          "emit": [Function],
                          "emitsOptions": null,
                          "emitted": null,
                          "exposeProxy": null,
                          "exposed": null,
                          "inheritAttrs": undefined,
                          "isDeactivated": false,
                          "isMounted": true,
                          "isUnmounted": false,
                          "m": null,
                          "next": null,
                          "parent": [Circular],
                          "props": {},
                          "propsDefaults": {},
                          "propsOptions": [
                            {},
                            [],
                          ],
                          "provides": {},
                          "proxy": {},
                          "refs": {},
                          "render": [Function],
                          "renderCache": [],
                          "root": [Circular],
                          "rtc": null,
                          "rtg": null,
                          "scope": EffectScope {
                            "_active": true,
                            "cleanups": [],
                            "detached": true,
                            "effects": [
                              ReactiveEffect {
                                "active": true,
                                "allowRecurse": true,
                                "deps": [
                                  Set {
                                    [Circular],
                                  },
                                ],
                                "fn": [Function],
                                "onTrack": undefined,
                                "onTrigger": undefined,
                                "parent": undefined,
                                "scheduler": [Function],
                              },
                            ],
                            "parent": undefined,
                          },
                          "setupContext": {
                            "attrs": {},
                            "emit": [Function],
                            "expose": [Function],
                            "slots": {},
                          },
                          "setupState": {},
                          "slots": {},
                          "slotsProxy": {},
                          "sp": null,
                          "subTree": {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": null,
                            "component": null,
                            "ctx": [Circular],
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <feed-sidebar-stub />,
                            "key": null,
                            "patchFlag": 0,
                            "props": {},
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 1,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "feed-sidebar-stub",
                          },
                          "suspense": null,
                          "suspenseId": 0,
                          "type": {
                            "model": undefined,
                            "name": "FeedSidebar",
                            "props": {},
                            "setup": [Function],
                          },
                          "u": null,
                          "uid": 15,
                          "um": null,
                          "update": [Function],
                          "vnode": [Circular],
                          "withProxy": null,
                        },
                        "ctx": [Circular],
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <feed-sidebar-stub />,
                        "key": null,
                        "patchFlag": 0,
                        "props": null,
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 4,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": {
                          "model": undefined,
                          "name": "FeedSidebar",
                          "props": {},
                          "setup": [Function],
                        },
                      },
                    ],
                    "component": null,
                    "ctx": [Circular],
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="col-span-4 mx-auto w-full"
                      id="feed-sidebar"
                    >
                      <feed-sidebar-stub />
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": {
                      "class": "col-span-4 mx-auto w-full",
                      "id": "feed-sidebar",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                ],
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <div
                  class="mt-8 max-w-[1100px] w-full mx-auto px-6 grid grid-cols-10 gap-28"
                >
                  <div
                    class="col-span-6 mx-auto w-full"
                    data-test="everything"
                  >
                    <feed-main-stub />
                  </div>
                  <div
                    class="col-span-4 mx-auto w-full"
                    id="feed-sidebar"
                  >
                    <feed-sidebar-stub />
                  </div>
                </div>,
                "key": null,
                "patchFlag": 0,
                "props": {
                  "class": "mt-8 max-w-[1100px] w-full mx-auto px-6 grid grid-cols-10 gap-28",
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": " fallback ",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!-- fallback -->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
            ],
            "component": null,
            "ctx": [Circular],
            "dirs": null,
            "dynamicChildren": [
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": {
                  "a": null,
                  "accessCache": {
                    "@@__IMMUTABLE_ITERABLE__@@": 0,
                    "@@__IMMUTABLE_RECORD__@@": 0,
                    "_isMockFunction": 0,
                    "constructor": 0,
                    "toJSON": 0,
                    Symbol(Symbol.toStringTag): 0,
                  },
                  "appContext": {
                    "app": [Circular],
                    "components": {
                      "FeedMain": {
                        "name": "FeedMain",
                      },
                      "FeedSidebar": {
                        "name": "FeedSidebar",
                      },
                      "transition": {
                        "name": "transition",
                      },
                      "transition-group": {
                        "name": "transition-group",
                      },
                    },
                    "config": {
                      "compilerOptions": {},
                      "errorHandler": undefined,
                      "globalProperties": {
                        "$pinia": {
                          "_a": [Circular],
                          "_e": EffectScope {
                            "_active": true,
                            "cleanups": [],
                            "detached": true,
                            "effects": [],
                            "parent": undefined,
                            "scopes": [
                              EffectScope {
                                "_active": true,
                                "cleanups": [],
                                "detached": false,
                                "effects": [],
                                "index": 0,
                                "parent": [Circular],
                              },
                              EffectScope {
                                "_active": true,
                                "cleanups": [],
                                "detached": false,
                                "effects": [],
                                "index": 1,
                                "parent": [Circular],
                              },
                              EffectScope {
                                "_active": true,
                                "cleanups": [],
                                "detached": false,
                                "effects": [],
                                "index": 2,
                                "parent": [Circular],
                              },
                            ],
                          },
                          "_p": [
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "_s": Map {
                            "Store for containing posts and related to posts" => {
                              "$dispose": [Function],
                              "$id": "Store for containing posts and related to posts",
                              "$onAction": [Function],
                              "$patch": [MockFunction $patch],
                              "$reset": [MockFunction spy],
                              "$subscribe": [Function],
                              "_customProperties": Set {},
                              "_hmrPayload": {
                                "actions": {
                                  "resetStore": [Function],
                                },
                                "getters": {},
                                "hotState": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": {},
                                  "_value": {},
                                  "dep": undefined,
                                },
                                "state": [
                                  "posts",
                                  "allComments",
                                  "followingPosts",
                                  "allTags",
                                  "loggedInUserPosts",
                                  "baseFetchURL",
                                  "baseLoggedInUserPostsURL",
                                ],
                              },
                              "_hotUpdate": [Function],
                              "_p": [Circular],
                              "allComments": null,
                              "allTags": null,
                              "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                              "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                              "followingPosts": null,
                              "loggedInUserPosts": null,
                              "posts": null,
                              "resetStore": [MockFunction spy] {
                                "calls": [
                                  [],
                                  [],
                                  [],
                                ],
                                "results": [
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                            },
                            "search" => {
                              "$dispose": [Function],
                              "$id": "search",
                              "$onAction": [Function],
                              "$patch": [MockFunction $patch],
                              "$reset": [MockFunction spy],
                              "$subscribe": [Function],
                              "_customProperties": Set {},
                              "_hmrPayload": {
                                "actions": {
                                  "resetStore": [Function],
                                },
                                "getters": {},
                                "hotState": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": {},
                                  "_value": {},
                                  "dep": undefined,
                                },
                                "state": [
                                  "searchPart",
                                  "categoryFilterPart",
                                  "tagFilterPart",
                                ],
                              },
                              "_hotUpdate": [Function],
                              "_p": [Circular],
                              "categoryFilterPart": null,
                              "resetStore": [MockFunction spy] {
                                "calls": [
                                  [],
                                  [],
                                  [],
                                ],
                                "results": [
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "searchPart": null,
                              "tagFilterPart": null,
                            },
                            "Pagination Store" => {
                              "$dispose": [Function],
                              "$id": "Pagination Store",
                              "$onAction": [Function],
                              "$patch": [MockFunction $patch],
                              "$reset": [MockFunction spy],
                              "$subscribe": [Function],
                              "_customProperties": Set {},
                              "_hmrPayload": {
                                "actions": {
                                  "resetStore": [Function],
                                },
                                "getters": {},
                                "hotState": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": {},
                                  "_value": {},
                                  "dep": undefined,
                                },
                                "state": [
                                  "activeFetchURL",
                                  "next_page",
                                  "previous_page",
                                  "last_page_link",
                                  "all_pages_count",
                                  "number_of_posts",
                                  "current_page_number",
                                ],
                              },
                              "_hotUpdate": [Function],
                              "_p": [Circular],
                              "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                              "all_pages_count": 0,
                              "current_page_number": 0,
                              "last_page_link": "",
                              "next_page": "",
                              "number_of_posts": 0,
                              "previous_page": "",
                              "resetStore": [MockFunction spy] {
                                "calls": [
                                  [],
                                  [],
                                  [],
                                ],
                                "results": [
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                            },
                          },
                          "_testing": true,
                          "app": [Circular],
                          "install": [Function],
                          "state": RefImpl {
                            "__v_isRef": true,
                            "__v_isShallow": false,
                            "_rawValue": {
                              "Pagination Store": {
                                "activeFetchURL": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "http://localhost:8888/api/posts/feed/",
                                  "_value": "http://localhost:8888/api/posts/feed/",
                                  "dep": undefined,
                                },
                                "all_pages_count": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": 0,
                                  "_value": 0,
                                  "dep": undefined,
                                },
                                "current_page_number": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": 0,
                                  "_value": 0,
                                  "dep": undefined,
                                },
                                "last_page_link": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "",
                                  "_value": "",
                                  "dep": undefined,
                                },
                                "next_page": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "",
                                  "_value": "",
                                  "dep": undefined,
                                },
                                "number_of_posts": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": 0,
                                  "_value": 0,
                                  "dep": undefined,
                                },
                                "previous_page": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "",
                                  "_value": "",
                                  "dep": undefined,
                                },
                              },
                              "Store for containing posts and related to posts": {
                                "allComments": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "allTags": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "baseFetchURL": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "http://localhost:8888/api/posts/feed/",
                                  "_value": "http://localhost:8888/api/posts/feed/",
                                  "dep": undefined,
                                },
                                "baseLoggedInUserPostsURL": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "http://localhost:8888/api/myuser/posts/",
                                  "_value": "http://localhost:8888/api/myuser/posts/",
                                  "dep": undefined,
                                },
                                "followingPosts": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "loggedInUserPosts": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "posts": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                              },
                              "search": {
                                "categoryFilterPart": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "searchPart": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "tagFilterPart": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                              },
                            },
                            "_value": {
                              "Pagination Store": {
                                "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                "all_pages_count": 0,
                                "current_page_number": 0,
                                "last_page_link": "",
                                "next_page": "",
                                "number_of_posts": 0,
                                "previous_page": "",
                              },
                              "Store for containing posts and related to posts": {
                                "allComments": null,
                                "allTags": null,
                                "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                "followingPosts": null,
                                "loggedInUserPosts": null,
                                "posts": null,
                              },
                              "search": {
                                "categoryFilterPart": null,
                                "searchPart": null,
                                "tagFilterPart": null,
                              },
                            },
                            "dep": undefined,
                          },
                          "use": [Function],
                        },
                      },
                      "isNativeTag": [Function],
                      "optionMergeStrategies": {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": {},
                    "emitsCache": WeakMap {},
                    "mixins": [
                      {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": {
                      Symbol(pinia): {
                        "_a": [Circular],
                        "_e": EffectScope {
                          "_active": true,
                          "cleanups": [],
                          "detached": true,
                          "effects": [],
                          "parent": undefined,
                          "scopes": [
                            EffectScope {
                              "_active": true,
                              "cleanups": [],
                              "detached": false,
                              "effects": [],
                              "index": 0,
                              "parent": [Circular],
                            },
                            EffectScope {
                              "_active": true,
                              "cleanups": [],
                              "detached": false,
                              "effects": [],
                              "index": 1,
                              "parent": [Circular],
                            },
                            EffectScope {
                              "_active": true,
                              "cleanups": [],
                              "detached": false,
                              "effects": [],
                              "index": 2,
                              "parent": [Circular],
                            },
                          ],
                        },
                        "_p": [
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "_s": Map {
                          "Store for containing posts and related to posts" => {
                            "$dispose": [Function],
                            "$id": "Store for containing posts and related to posts",
                            "$onAction": [Function],
                            "$patch": [MockFunction $patch],
                            "$reset": [MockFunction spy],
                            "$subscribe": [Function],
                            "_customProperties": Set {},
                            "_hmrPayload": {
                              "actions": {
                                "resetStore": [Function],
                              },
                              "getters": {},
                              "hotState": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": {},
                                "_value": {},
                                "dep": undefined,
                              },
                              "state": [
                                "posts",
                                "allComments",
                                "followingPosts",
                                "allTags",
                                "loggedInUserPosts",
                                "baseFetchURL",
                                "baseLoggedInUserPostsURL",
                              ],
                            },
                            "_hotUpdate": [Function],
                            "_p": [Circular],
                            "allComments": null,
                            "allTags": null,
                            "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                            "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                            "followingPosts": null,
                            "loggedInUserPosts": null,
                            "posts": null,
                            "resetStore": [MockFunction spy] {
                              "calls": [
                                [],
                                [],
                                [],
                              ],
                              "results": [
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                          "search" => {
                            "$dispose": [Function],
                            "$id": "search",
                            "$onAction": [Function],
                            "$patch": [MockFunction $patch],
                            "$reset": [MockFunction spy],
                            "$subscribe": [Function],
                            "_customProperties": Set {},
                            "_hmrPayload": {
                              "actions": {
                                "resetStore": [Function],
                              },
                              "getters": {},
                              "hotState": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": {},
                                "_value": {},
                                "dep": undefined,
                              },
                              "state": [
                                "searchPart",
                                "categoryFilterPart",
                                "tagFilterPart",
                              ],
                            },
                            "_hotUpdate": [Function],
                            "_p": [Circular],
                            "categoryFilterPart": null,
                            "resetStore": [MockFunction spy] {
                              "calls": [
                                [],
                                [],
                                [],
                              ],
                              "results": [
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "searchPart": null,
                            "tagFilterPart": null,
                          },
                          "Pagination Store" => {
                            "$dispose": [Function],
                            "$id": "Pagination Store",
                            "$onAction": [Function],
                            "$patch": [MockFunction $patch],
                            "$reset": [MockFunction spy],
                            "$subscribe": [Function],
                            "_customProperties": Set {},
                            "_hmrPayload": {
                              "actions": {
                                "resetStore": [Function],
                              },
                              "getters": {},
                              "hotState": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": {},
                                "_value": {},
                                "dep": undefined,
                              },
                              "state": [
                                "activeFetchURL",
                                "next_page",
                                "previous_page",
                                "last_page_link",
                                "all_pages_count",
                                "number_of_posts",
                                "current_page_number",
                              ],
                            },
                            "_hotUpdate": [Function],
                            "_p": [Circular],
                            "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                            "all_pages_count": 0,
                            "current_page_number": 0,
                            "last_page_link": "",
                            "next_page": "",
                            "number_of_posts": 0,
                            "previous_page": "",
                            "resetStore": [MockFunction spy] {
                              "calls": [
                                [],
                                [],
                                [],
                              ],
                              "results": [
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                        },
                        "_testing": true,
                        "app": [Circular],
                        "install": [Function],
                        "state": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {
                            "Pagination Store": {
                              "activeFetchURL": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "http://localhost:8888/api/posts/feed/",
                                "_value": "http://localhost:8888/api/posts/feed/",
                                "dep": undefined,
                              },
                              "all_pages_count": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": 0,
                                "_value": 0,
                                "dep": undefined,
                              },
                              "current_page_number": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": 0,
                                "_value": 0,
                                "dep": undefined,
                              },
                              "last_page_link": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "",
                                "_value": "",
                                "dep": undefined,
                              },
                              "next_page": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "",
                                "_value": "",
                                "dep": undefined,
                              },
                              "number_of_posts": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": 0,
                                "_value": 0,
                                "dep": undefined,
                              },
                              "previous_page": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "",
                                "_value": "",
                                "dep": undefined,
                              },
                            },
                            "Store for containing posts and related to posts": {
                              "allComments": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "allTags": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "baseFetchURL": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "http://localhost:8888/api/posts/feed/",
                                "_value": "http://localhost:8888/api/posts/feed/",
                                "dep": undefined,
                              },
                              "baseLoggedInUserPostsURL": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "http://localhost:8888/api/myuser/posts/",
                                "_value": "http://localhost:8888/api/myuser/posts/",
                                "dep": undefined,
                              },
                              "followingPosts": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "loggedInUserPosts": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "posts": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                            },
                            "search": {
                              "categoryFilterPart": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "searchPart": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "tagFilterPart": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                            },
                          },
                          "_value": {
                            "Pagination Store": {
                              "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                              "all_pages_count": 0,
                              "current_page_number": 0,
                              "last_page_link": "",
                              "next_page": "",
                              "number_of_posts": 0,
                              "previous_page": "",
                            },
                            "Store for containing posts and related to posts": {
                              "allComments": null,
                              "allTags": null,
                              "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                              "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                              "followingPosts": null,
                              "loggedInUserPosts": null,
                              "posts": null,
                            },
                            "search": {
                              "categoryFilterPart": null,
                              "searchPart": null,
                              "tagFilterPart": null,
                            },
                          },
                          "dep": undefined,
                        },
                        "use": [Function],
                      },
                    },
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": {},
                  "attrsProxy": {},
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": {},
                  "da": null,
                  "data": {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": [
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "parent": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": {},
                  "propsDefaults": {},
                  "propsOptions": [
                    {},
                    [],
                  ],
                  "provides": {},
                  "proxy": {},
                  "refs": {},
                  "render": [Function],
                  "renderCache": [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": [
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                    ],
                    "parent": undefined,
                  },
                  "setupContext": {
                    "attrs": {},
                    "emit": [Function],
                    "expose": [Function],
                    "slots": {},
                  },
                  "setupState": {},
                  "slots": {},
                  "slotsProxy": {},
                  "sp": null,
                  "subTree": {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "ctx": [Circular],
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <feed-main-stub />,
                    "key": null,
                    "patchFlag": 0,
                    "props": {},
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "feed-main-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": {
                    "model": undefined,
                    "name": "FeedMain",
                    "props": {},
                    "setup": [Function],
                  },
                  "u": null,
                  "uid": 14,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <feed-main-stub />,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": {
                  "model": undefined,
                  "name": "FeedMain",
                  "props": {},
                  "setup": [Function],
                },
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": {
                  "a": null,
                  "accessCache": {
                    "@@__IMMUTABLE_ITERABLE__@@": 0,
                    "@@__IMMUTABLE_RECORD__@@": 0,
                    "_isMockFunction": 0,
                    "constructor": 0,
                    "toJSON": 0,
                    Symbol(Symbol.toStringTag): 0,
                  },
                  "appContext": {
                    "app": [Circular],
                    "components": {
                      "FeedMain": {
                        "name": "FeedMain",
                      },
                      "FeedSidebar": {
                        "name": "FeedSidebar",
                      },
                      "transition": {
                        "name": "transition",
                      },
                      "transition-group": {
                        "name": "transition-group",
                      },
                    },
                    "config": {
                      "compilerOptions": {},
                      "errorHandler": undefined,
                      "globalProperties": {
                        "$pinia": {
                          "_a": [Circular],
                          "_e": EffectScope {
                            "_active": true,
                            "cleanups": [],
                            "detached": true,
                            "effects": [],
                            "parent": undefined,
                            "scopes": [
                              EffectScope {
                                "_active": true,
                                "cleanups": [],
                                "detached": false,
                                "effects": [],
                                "index": 0,
                                "parent": [Circular],
                              },
                              EffectScope {
                                "_active": true,
                                "cleanups": [],
                                "detached": false,
                                "effects": [],
                                "index": 1,
                                "parent": [Circular],
                              },
                              EffectScope {
                                "_active": true,
                                "cleanups": [],
                                "detached": false,
                                "effects": [],
                                "index": 2,
                                "parent": [Circular],
                              },
                            ],
                          },
                          "_p": [
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "_s": Map {
                            "Store for containing posts and related to posts" => {
                              "$dispose": [Function],
                              "$id": "Store for containing posts and related to posts",
                              "$onAction": [Function],
                              "$patch": [MockFunction $patch],
                              "$reset": [MockFunction spy],
                              "$subscribe": [Function],
                              "_customProperties": Set {},
                              "_hmrPayload": {
                                "actions": {
                                  "resetStore": [Function],
                                },
                                "getters": {},
                                "hotState": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": {},
                                  "_value": {},
                                  "dep": undefined,
                                },
                                "state": [
                                  "posts",
                                  "allComments",
                                  "followingPosts",
                                  "allTags",
                                  "loggedInUserPosts",
                                  "baseFetchURL",
                                  "baseLoggedInUserPostsURL",
                                ],
                              },
                              "_hotUpdate": [Function],
                              "_p": [Circular],
                              "allComments": null,
                              "allTags": null,
                              "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                              "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                              "followingPosts": null,
                              "loggedInUserPosts": null,
                              "posts": null,
                              "resetStore": [MockFunction spy] {
                                "calls": [
                                  [],
                                  [],
                                  [],
                                ],
                                "results": [
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                            },
                            "search" => {
                              "$dispose": [Function],
                              "$id": "search",
                              "$onAction": [Function],
                              "$patch": [MockFunction $patch],
                              "$reset": [MockFunction spy],
                              "$subscribe": [Function],
                              "_customProperties": Set {},
                              "_hmrPayload": {
                                "actions": {
                                  "resetStore": [Function],
                                },
                                "getters": {},
                                "hotState": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": {},
                                  "_value": {},
                                  "dep": undefined,
                                },
                                "state": [
                                  "searchPart",
                                  "categoryFilterPart",
                                  "tagFilterPart",
                                ],
                              },
                              "_hotUpdate": [Function],
                              "_p": [Circular],
                              "categoryFilterPart": null,
                              "resetStore": [MockFunction spy] {
                                "calls": [
                                  [],
                                  [],
                                  [],
                                ],
                                "results": [
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "searchPart": null,
                              "tagFilterPart": null,
                            },
                            "Pagination Store" => {
                              "$dispose": [Function],
                              "$id": "Pagination Store",
                              "$onAction": [Function],
                              "$patch": [MockFunction $patch],
                              "$reset": [MockFunction spy],
                              "$subscribe": [Function],
                              "_customProperties": Set {},
                              "_hmrPayload": {
                                "actions": {
                                  "resetStore": [Function],
                                },
                                "getters": {},
                                "hotState": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": {},
                                  "_value": {},
                                  "dep": undefined,
                                },
                                "state": [
                                  "activeFetchURL",
                                  "next_page",
                                  "previous_page",
                                  "last_page_link",
                                  "all_pages_count",
                                  "number_of_posts",
                                  "current_page_number",
                                ],
                              },
                              "_hotUpdate": [Function],
                              "_p": [Circular],
                              "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                              "all_pages_count": 0,
                              "current_page_number": 0,
                              "last_page_link": "",
                              "next_page": "",
                              "number_of_posts": 0,
                              "previous_page": "",
                              "resetStore": [MockFunction spy] {
                                "calls": [
                                  [],
                                  [],
                                  [],
                                ],
                                "results": [
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                            },
                          },
                          "_testing": true,
                          "app": [Circular],
                          "install": [Function],
                          "state": RefImpl {
                            "__v_isRef": true,
                            "__v_isShallow": false,
                            "_rawValue": {
                              "Pagination Store": {
                                "activeFetchURL": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "http://localhost:8888/api/posts/feed/",
                                  "_value": "http://localhost:8888/api/posts/feed/",
                                  "dep": undefined,
                                },
                                "all_pages_count": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": 0,
                                  "_value": 0,
                                  "dep": undefined,
                                },
                                "current_page_number": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": 0,
                                  "_value": 0,
                                  "dep": undefined,
                                },
                                "last_page_link": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "",
                                  "_value": "",
                                  "dep": undefined,
                                },
                                "next_page": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "",
                                  "_value": "",
                                  "dep": undefined,
                                },
                                "number_of_posts": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": 0,
                                  "_value": 0,
                                  "dep": undefined,
                                },
                                "previous_page": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "",
                                  "_value": "",
                                  "dep": undefined,
                                },
                              },
                              "Store for containing posts and related to posts": {
                                "allComments": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "allTags": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "baseFetchURL": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "http://localhost:8888/api/posts/feed/",
                                  "_value": "http://localhost:8888/api/posts/feed/",
                                  "dep": undefined,
                                },
                                "baseLoggedInUserPostsURL": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": "http://localhost:8888/api/myuser/posts/",
                                  "_value": "http://localhost:8888/api/myuser/posts/",
                                  "dep": undefined,
                                },
                                "followingPosts": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "loggedInUserPosts": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "posts": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                              },
                              "search": {
                                "categoryFilterPart": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "searchPart": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                                "tagFilterPart": RefImpl {
                                  "__v_isRef": true,
                                  "__v_isShallow": false,
                                  "_rawValue": null,
                                  "_value": null,
                                  "dep": undefined,
                                },
                              },
                            },
                            "_value": {
                              "Pagination Store": {
                                "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                                "all_pages_count": 0,
                                "current_page_number": 0,
                                "last_page_link": "",
                                "next_page": "",
                                "number_of_posts": 0,
                                "previous_page": "",
                              },
                              "Store for containing posts and related to posts": {
                                "allComments": null,
                                "allTags": null,
                                "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                                "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                                "followingPosts": null,
                                "loggedInUserPosts": null,
                                "posts": null,
                              },
                              "search": {
                                "categoryFilterPart": null,
                                "searchPart": null,
                                "tagFilterPart": null,
                              },
                            },
                            "dep": undefined,
                          },
                          "use": [Function],
                        },
                      },
                      "isNativeTag": [Function],
                      "optionMergeStrategies": {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": {},
                    "emitsCache": WeakMap {},
                    "mixins": [
                      {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": {
                      Symbol(pinia): {
                        "_a": [Circular],
                        "_e": EffectScope {
                          "_active": true,
                          "cleanups": [],
                          "detached": true,
                          "effects": [],
                          "parent": undefined,
                          "scopes": [
                            EffectScope {
                              "_active": true,
                              "cleanups": [],
                              "detached": false,
                              "effects": [],
                              "index": 0,
                              "parent": [Circular],
                            },
                            EffectScope {
                              "_active": true,
                              "cleanups": [],
                              "detached": false,
                              "effects": [],
                              "index": 1,
                              "parent": [Circular],
                            },
                            EffectScope {
                              "_active": true,
                              "cleanups": [],
                              "detached": false,
                              "effects": [],
                              "index": 2,
                              "parent": [Circular],
                            },
                          ],
                        },
                        "_p": [
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "_s": Map {
                          "Store for containing posts and related to posts" => {
                            "$dispose": [Function],
                            "$id": "Store for containing posts and related to posts",
                            "$onAction": [Function],
                            "$patch": [MockFunction $patch],
                            "$reset": [MockFunction spy],
                            "$subscribe": [Function],
                            "_customProperties": Set {},
                            "_hmrPayload": {
                              "actions": {
                                "resetStore": [Function],
                              },
                              "getters": {},
                              "hotState": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": {},
                                "_value": {},
                                "dep": undefined,
                              },
                              "state": [
                                "posts",
                                "allComments",
                                "followingPosts",
                                "allTags",
                                "loggedInUserPosts",
                                "baseFetchURL",
                                "baseLoggedInUserPostsURL",
                              ],
                            },
                            "_hotUpdate": [Function],
                            "_p": [Circular],
                            "allComments": null,
                            "allTags": null,
                            "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                            "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                            "followingPosts": null,
                            "loggedInUserPosts": null,
                            "posts": null,
                            "resetStore": [MockFunction spy] {
                              "calls": [
                                [],
                                [],
                                [],
                              ],
                              "results": [
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                          "search" => {
                            "$dispose": [Function],
                            "$id": "search",
                            "$onAction": [Function],
                            "$patch": [MockFunction $patch],
                            "$reset": [MockFunction spy],
                            "$subscribe": [Function],
                            "_customProperties": Set {},
                            "_hmrPayload": {
                              "actions": {
                                "resetStore": [Function],
                              },
                              "getters": {},
                              "hotState": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": {},
                                "_value": {},
                                "dep": undefined,
                              },
                              "state": [
                                "searchPart",
                                "categoryFilterPart",
                                "tagFilterPart",
                              ],
                            },
                            "_hotUpdate": [Function],
                            "_p": [Circular],
                            "categoryFilterPart": null,
                            "resetStore": [MockFunction spy] {
                              "calls": [
                                [],
                                [],
                                [],
                              ],
                              "results": [
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "searchPart": null,
                            "tagFilterPart": null,
                          },
                          "Pagination Store" => {
                            "$dispose": [Function],
                            "$id": "Pagination Store",
                            "$onAction": [Function],
                            "$patch": [MockFunction $patch],
                            "$reset": [MockFunction spy],
                            "$subscribe": [Function],
                            "_customProperties": Set {},
                            "_hmrPayload": {
                              "actions": {
                                "resetStore": [Function],
                              },
                              "getters": {},
                              "hotState": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": {},
                                "_value": {},
                                "dep": undefined,
                              },
                              "state": [
                                "activeFetchURL",
                                "next_page",
                                "previous_page",
                                "last_page_link",
                                "all_pages_count",
                                "number_of_posts",
                                "current_page_number",
                              ],
                            },
                            "_hotUpdate": [Function],
                            "_p": [Circular],
                            "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                            "all_pages_count": 0,
                            "current_page_number": 0,
                            "last_page_link": "",
                            "next_page": "",
                            "number_of_posts": 0,
                            "previous_page": "",
                            "resetStore": [MockFunction spy] {
                              "calls": [
                                [],
                                [],
                                [],
                              ],
                              "results": [
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                                {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                          },
                        },
                        "_testing": true,
                        "app": [Circular],
                        "install": [Function],
                        "state": RefImpl {
                          "__v_isRef": true,
                          "__v_isShallow": false,
                          "_rawValue": {
                            "Pagination Store": {
                              "activeFetchURL": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "http://localhost:8888/api/posts/feed/",
                                "_value": "http://localhost:8888/api/posts/feed/",
                                "dep": undefined,
                              },
                              "all_pages_count": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": 0,
                                "_value": 0,
                                "dep": undefined,
                              },
                              "current_page_number": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": 0,
                                "_value": 0,
                                "dep": undefined,
                              },
                              "last_page_link": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "",
                                "_value": "",
                                "dep": undefined,
                              },
                              "next_page": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "",
                                "_value": "",
                                "dep": undefined,
                              },
                              "number_of_posts": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": 0,
                                "_value": 0,
                                "dep": undefined,
                              },
                              "previous_page": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "",
                                "_value": "",
                                "dep": undefined,
                              },
                            },
                            "Store for containing posts and related to posts": {
                              "allComments": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "allTags": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "baseFetchURL": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "http://localhost:8888/api/posts/feed/",
                                "_value": "http://localhost:8888/api/posts/feed/",
                                "dep": undefined,
                              },
                              "baseLoggedInUserPostsURL": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": "http://localhost:8888/api/myuser/posts/",
                                "_value": "http://localhost:8888/api/myuser/posts/",
                                "dep": undefined,
                              },
                              "followingPosts": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "loggedInUserPosts": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "posts": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                            },
                            "search": {
                              "categoryFilterPart": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "searchPart": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                              "tagFilterPart": RefImpl {
                                "__v_isRef": true,
                                "__v_isShallow": false,
                                "_rawValue": null,
                                "_value": null,
                                "dep": undefined,
                              },
                            },
                          },
                          "_value": {
                            "Pagination Store": {
                              "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                              "all_pages_count": 0,
                              "current_page_number": 0,
                              "last_page_link": "",
                              "next_page": "",
                              "number_of_posts": 0,
                              "previous_page": "",
                            },
                            "Store for containing posts and related to posts": {
                              "allComments": null,
                              "allTags": null,
                              "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                              "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                              "followingPosts": null,
                              "loggedInUserPosts": null,
                              "posts": null,
                            },
                            "search": {
                              "categoryFilterPart": null,
                              "searchPart": null,
                              "tagFilterPart": null,
                            },
                          },
                          "dep": undefined,
                        },
                        "use": [Function],
                      },
                    },
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": {},
                  "attrsProxy": {},
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": {},
                  "da": null,
                  "data": {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": [
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "parent": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": {},
                  "propsDefaults": {},
                  "propsOptions": [
                    {},
                    [],
                  ],
                  "provides": {},
                  "proxy": {},
                  "refs": {},
                  "render": [Function],
                  "renderCache": [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": true,
                    "effects": [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": [
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                    ],
                    "parent": undefined,
                  },
                  "setupContext": {
                    "attrs": {},
                    "emit": [Function],
                    "expose": [Function],
                    "slots": {},
                  },
                  "setupState": {},
                  "slots": {},
                  "slotsProxy": {},
                  "sp": null,
                  "subTree": {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "ctx": [Circular],
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <feed-sidebar-stub />,
                    "key": null,
                    "patchFlag": 0,
                    "props": {},
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "feed-sidebar-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": {
                    "model": undefined,
                    "name": "FeedSidebar",
                    "props": {},
                    "setup": [Function],
                  },
                  "u": null,
                  "uid": 15,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <feed-sidebar-stub />,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": {
                  "model": undefined,
                  "name": "FeedSidebar",
                  "props": {},
                  "setup": [Function],
                },
              },
            ],
            "dynamicProps": null,
            "el": ,
            "key": null,
            "patchFlag": 2112,
            "props": null,
            "ref": null,
            "scopeId": null,
            "shapeFlag": 16,
            "slotScopeIds": null,
            "ssContent": null,
            "ssFallback": null,
            "staticCount": 0,
            "suspense": null,
            "target": null,
            "targetAnchor": null,
            "transition": null,
            "type": Symbol(v-fgt),
          },
          "suspense": null,
          "suspenseId": 0,
          "type": {
            "__file": "C:/Users/metle/Desktop/Blogg/frontend/pages/index.vue",
            "__name": "index",
            "components": {},
            "render": [Function],
            "setup": [Function],
          },
          "u": null,
          "uid": 13,
          "um": [
            [Function],
          ],
          "update": [Function],
          "vnode": [Circular],
          "withProxy": null,
        },
        "ctx": [Circular],
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": ,
        "key": null,
        "patchFlag": 0,
        "props": {
          "ref": "VTU_COMPONENT",
        },
        "ref": {
          "f": false,
          "i": [Circular],
          "k": undefined,
          "r": "VTU_COMPONENT",
        },
        "scopeId": null,
        "shapeFlag": 36,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": {
          "__file": "C:/Users/metle/Desktop/Blogg/frontend/pages/index.vue",
          "__name": "index",
          "components": {},
          "render": [Function],
          "setup": [Function],
        },
      },
      "suspense": null,
      "suspenseId": 0,
      "type": {
        "name": "VTU_ROOT",
        "render": [Function],
        "setup": [Function],
      },
      "u": null,
      "uid": 12,
      "um": null,
      "update": [Function],
      "vnode": {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": {
          "app": [Circular],
          "components": {
            "FeedMain": {
              "name": "FeedMain",
            },
            "FeedSidebar": {
              "name": "FeedSidebar",
            },
            "transition": {
              "name": "transition",
            },
            "transition-group": {
              "name": "transition-group",
            },
          },
          "config": {
            "compilerOptions": {},
            "errorHandler": undefined,
            "globalProperties": {
              "$pinia": {
                "_a": [Circular],
                "_e": EffectScope {
                  "_active": true,
                  "cleanups": [],
                  "detached": true,
                  "effects": [],
                  "parent": undefined,
                  "scopes": [
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 0,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 1,
                      "parent": [Circular],
                    },
                    EffectScope {
                      "_active": true,
                      "cleanups": [],
                      "detached": false,
                      "effects": [],
                      "index": 2,
                      "parent": [Circular],
                    },
                  ],
                },
                "_p": [
                  [Function],
                  [Function],
                  [Function],
                ],
                "_s": Map {
                  "Store for containing posts and related to posts" => {
                    "$dispose": [Function],
                    "$id": "Store for containing posts and related to posts",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "posts",
                        "allComments",
                        "followingPosts",
                        "allTags",
                        "loggedInUserPosts",
                        "baseFetchURL",
                        "baseLoggedInUserPostsURL",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "allComments": null,
                    "allTags": null,
                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                    "followingPosts": null,
                    "loggedInUserPosts": null,
                    "posts": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                  "search" => {
                    "$dispose": [Function],
                    "$id": "search",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "searchPart",
                        "categoryFilterPart",
                        "tagFilterPart",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "categoryFilterPart": null,
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "searchPart": null,
                    "tagFilterPart": null,
                  },
                  "Pagination Store" => {
                    "$dispose": [Function],
                    "$id": "Pagination Store",
                    "$onAction": [Function],
                    "$patch": [MockFunction $patch],
                    "$reset": [MockFunction spy],
                    "$subscribe": [Function],
                    "_customProperties": Set {},
                    "_hmrPayload": {
                      "actions": {
                        "resetStore": [Function],
                      },
                      "getters": {},
                      "hotState": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": {},
                        "_value": {},
                        "dep": undefined,
                      },
                      "state": [
                        "activeFetchURL",
                        "next_page",
                        "previous_page",
                        "last_page_link",
                        "all_pages_count",
                        "number_of_posts",
                        "current_page_number",
                      ],
                    },
                    "_hotUpdate": [Function],
                    "_p": [Circular],
                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                    "all_pages_count": 0,
                    "current_page_number": 0,
                    "last_page_link": "",
                    "next_page": "",
                    "number_of_posts": 0,
                    "previous_page": "",
                    "resetStore": [MockFunction spy] {
                      "calls": [
                        [],
                        [],
                        [],
                      ],
                      "results": [
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                        {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  },
                },
                "_testing": true,
                "app": [Circular],
                "install": [Function],
                "state": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {
                    "Pagination Store": {
                      "activeFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "all_pages_count": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "current_page_number": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "last_page_link": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "next_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                      "number_of_posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": 0,
                        "_value": 0,
                        "dep": undefined,
                      },
                      "previous_page": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "",
                        "_value": "",
                        "dep": undefined,
                      },
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "allTags": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "baseFetchURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/posts/feed/",
                        "_value": "http://localhost:8888/api/posts/feed/",
                        "dep": undefined,
                      },
                      "baseLoggedInUserPostsURL": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": "http://localhost:8888/api/myuser/posts/",
                        "_value": "http://localhost:8888/api/myuser/posts/",
                        "dep": undefined,
                      },
                      "followingPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "loggedInUserPosts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "posts": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                    "search": {
                      "categoryFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "searchPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                      "tagFilterPart": RefImpl {
                        "__v_isRef": true,
                        "__v_isShallow": false,
                        "_rawValue": null,
                        "_value": null,
                        "dep": undefined,
                      },
                    },
                  },
                  "_value": {
                    "Pagination Store": {
                      "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                      "all_pages_count": 0,
                      "current_page_number": 0,
                      "last_page_link": "",
                      "next_page": "",
                      "number_of_posts": 0,
                      "previous_page": "",
                    },
                    "Store for containing posts and related to posts": {
                      "allComments": null,
                      "allTags": null,
                      "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                      "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                      "followingPosts": null,
                      "loggedInUserPosts": null,
                      "posts": null,
                    },
                    "search": {
                      "categoryFilterPart": null,
                      "searchPart": null,
                      "tagFilterPart": null,
                    },
                  },
                  "dep": undefined,
                },
                "use": [Function],
              },
            },
            "isNativeTag": [Function],
            "optionMergeStrategies": {},
            "performance": false,
            "warnHandler": undefined,
          },
          "directives": {},
          "emitsCache": WeakMap {},
          "mixins": [
            {
              "beforeCreate": [Function],
            },
          ],
          "optionsCache": WeakMap {},
          "propsCache": WeakMap {},
          "provides": {
            Symbol(pinia): {
              "_a": [Circular],
              "_e": EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": true,
                "effects": [],
                "parent": undefined,
                "scopes": [
                  EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": false,
                    "effects": [],
                    "index": 0,
                    "parent": [Circular],
                  },
                  EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": false,
                    "effects": [],
                    "index": 1,
                    "parent": [Circular],
                  },
                  EffectScope {
                    "_active": true,
                    "cleanups": [],
                    "detached": false,
                    "effects": [],
                    "index": 2,
                    "parent": [Circular],
                  },
                ],
              },
              "_p": [
                [Function],
                [Function],
                [Function],
              ],
              "_s": Map {
                "Store for containing posts and related to posts" => {
                  "$dispose": [Function],
                  "$id": "Store for containing posts and related to posts",
                  "$onAction": [Function],
                  "$patch": [MockFunction $patch],
                  "$reset": [MockFunction spy],
                  "$subscribe": [Function],
                  "_customProperties": Set {},
                  "_hmrPayload": {
                    "actions": {
                      "resetStore": [Function],
                    },
                    "getters": {},
                    "hotState": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": {},
                      "_value": {},
                      "dep": undefined,
                    },
                    "state": [
                      "posts",
                      "allComments",
                      "followingPosts",
                      "allTags",
                      "loggedInUserPosts",
                      "baseFetchURL",
                      "baseLoggedInUserPostsURL",
                    ],
                  },
                  "_hotUpdate": [Function],
                  "_p": [Circular],
                  "allComments": null,
                  "allTags": null,
                  "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                  "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                  "followingPosts": null,
                  "loggedInUserPosts": null,
                  "posts": null,
                  "resetStore": [MockFunction spy] {
                    "calls": [
                      [],
                      [],
                      [],
                    ],
                    "results": [
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                },
                "search" => {
                  "$dispose": [Function],
                  "$id": "search",
                  "$onAction": [Function],
                  "$patch": [MockFunction $patch],
                  "$reset": [MockFunction spy],
                  "$subscribe": [Function],
                  "_customProperties": Set {},
                  "_hmrPayload": {
                    "actions": {
                      "resetStore": [Function],
                    },
                    "getters": {},
                    "hotState": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": {},
                      "_value": {},
                      "dep": undefined,
                    },
                    "state": [
                      "searchPart",
                      "categoryFilterPart",
                      "tagFilterPart",
                    ],
                  },
                  "_hotUpdate": [Function],
                  "_p": [Circular],
                  "categoryFilterPart": null,
                  "resetStore": [MockFunction spy] {
                    "calls": [
                      [],
                      [],
                      [],
                    ],
                    "results": [
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "searchPart": null,
                  "tagFilterPart": null,
                },
                "Pagination Store" => {
                  "$dispose": [Function],
                  "$id": "Pagination Store",
                  "$onAction": [Function],
                  "$patch": [MockFunction $patch],
                  "$reset": [MockFunction spy],
                  "$subscribe": [Function],
                  "_customProperties": Set {},
                  "_hmrPayload": {
                    "actions": {
                      "resetStore": [Function],
                    },
                    "getters": {},
                    "hotState": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": {},
                      "_value": {},
                      "dep": undefined,
                    },
                    "state": [
                      "activeFetchURL",
                      "next_page",
                      "previous_page",
                      "last_page_link",
                      "all_pages_count",
                      "number_of_posts",
                      "current_page_number",
                    ],
                  },
                  "_hotUpdate": [Function],
                  "_p": [Circular],
                  "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                  "all_pages_count": 0,
                  "current_page_number": 0,
                  "last_page_link": "",
                  "next_page": "",
                  "number_of_posts": 0,
                  "previous_page": "",
                  "resetStore": [MockFunction spy] {
                    "calls": [
                      [],
                      [],
                      [],
                    ],
                    "results": [
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                      {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                },
              },
              "_testing": true,
              "app": [Circular],
              "install": [Function],
              "state": RefImpl {
                "__v_isRef": true,
                "__v_isShallow": false,
                "_rawValue": {
                  "Pagination Store": {
                    "activeFetchURL": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "http://localhost:8888/api/posts/feed/",
                      "_value": "http://localhost:8888/api/posts/feed/",
                      "dep": undefined,
                    },
                    "all_pages_count": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": 0,
                      "_value": 0,
                      "dep": undefined,
                    },
                    "current_page_number": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": 0,
                      "_value": 0,
                      "dep": undefined,
                    },
                    "last_page_link": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "",
                      "_value": "",
                      "dep": undefined,
                    },
                    "next_page": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "",
                      "_value": "",
                      "dep": undefined,
                    },
                    "number_of_posts": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": 0,
                      "_value": 0,
                      "dep": undefined,
                    },
                    "previous_page": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "",
                      "_value": "",
                      "dep": undefined,
                    },
                  },
                  "Store for containing posts and related to posts": {
                    "allComments": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "allTags": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "baseFetchURL": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "http://localhost:8888/api/posts/feed/",
                      "_value": "http://localhost:8888/api/posts/feed/",
                      "dep": undefined,
                    },
                    "baseLoggedInUserPostsURL": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": "http://localhost:8888/api/myuser/posts/",
                      "_value": "http://localhost:8888/api/myuser/posts/",
                      "dep": undefined,
                    },
                    "followingPosts": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "loggedInUserPosts": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "posts": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                  },
                  "search": {
                    "categoryFilterPart": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "searchPart": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                    "tagFilterPart": RefImpl {
                      "__v_isRef": true,
                      "__v_isShallow": false,
                      "_rawValue": null,
                      "_value": null,
                      "dep": undefined,
                    },
                  },
                },
                "_value": {
                  "Pagination Store": {
                    "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                    "all_pages_count": 0,
                    "current_page_number": 0,
                    "last_page_link": "",
                    "next_page": "",
                    "number_of_posts": 0,
                    "previous_page": "",
                  },
                  "Store for containing posts and related to posts": {
                    "allComments": null,
                    "allTags": null,
                    "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                    "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                    "followingPosts": null,
                    "loggedInUserPosts": null,
                    "posts": null,
                  },
                  "search": {
                    "categoryFilterPart": null,
                    "searchPart": null,
                    "tagFilterPart": null,
                  },
                },
                "dep": undefined,
              },
              "use": [Function],
            },
          },
          "reload": [Function],
        },
        "children": null,
        "component": [Circular],
        "ctx": null,
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": ,
        "key": null,
        "patchFlag": 0,
        "props": null,
        "ref": null,
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": {
          "name": "VTU_ROOT",
          "render": [Function],
          "setup": [Function],
        },
      },
      "withProxy": null,
    },
    "_props": null,
    "_uid": 3,
    "component": [Function],
    "config": {
      "compilerOptions": {},
      "errorHandler": undefined,
      "globalProperties": {
        "$pinia": {
          "_a": [Circular],
          "_e": EffectScope {
            "_active": true,
            "cleanups": [],
            "detached": true,
            "effects": [],
            "parent": undefined,
            "scopes": [
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 0,
                "parent": [Circular],
              },
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 1,
                "parent": [Circular],
              },
              EffectScope {
                "_active": true,
                "cleanups": [],
                "detached": false,
                "effects": [],
                "index": 2,
                "parent": [Circular],
              },
            ],
          },
          "_p": [
            [Function],
            [Function],
            [Function],
          ],
          "_s": Map {
            "Store for containing posts and related to posts" => {
              "$dispose": [Function],
              "$id": "Store for containing posts and related to posts",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "posts",
                  "allComments",
                  "followingPosts",
                  "allTags",
                  "loggedInUserPosts",
                  "baseFetchURL",
                  "baseLoggedInUserPostsURL",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "allComments": null,
              "allTags": null,
              "baseFetchURL": "http://localhost:8888/api/posts/feed/",
              "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
              "followingPosts": null,
              "loggedInUserPosts": null,
              "posts": null,
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            },
            "search" => {
              "$dispose": [Function],
              "$id": "search",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "searchPart",
                  "categoryFilterPart",
                  "tagFilterPart",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "categoryFilterPart": null,
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "searchPart": null,
              "tagFilterPart": null,
            },
            "Pagination Store" => {
              "$dispose": [Function],
              "$id": "Pagination Store",
              "$onAction": [Function],
              "$patch": [MockFunction $patch],
              "$reset": [MockFunction spy],
              "$subscribe": [Function],
              "_customProperties": Set {},
              "_hmrPayload": {
                "actions": {
                  "resetStore": [Function],
                },
                "getters": {},
                "hotState": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": {},
                  "_value": {},
                  "dep": undefined,
                },
                "state": [
                  "activeFetchURL",
                  "next_page",
                  "previous_page",
                  "last_page_link",
                  "all_pages_count",
                  "number_of_posts",
                  "current_page_number",
                ],
              },
              "_hotUpdate": [Function],
              "_p": [Circular],
              "activeFetchURL": "http://localhost:8888/api/posts/feed/",
              "all_pages_count": 0,
              "current_page_number": 0,
              "last_page_link": "",
              "next_page": "",
              "number_of_posts": 0,
              "previous_page": "",
              "resetStore": [MockFunction spy] {
                "calls": [
                  [],
                  [],
                  [],
                ],
                "results": [
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                  {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            },
          },
          "_testing": true,
          "app": [Circular],
          "install": [Function],
          "state": RefImpl {
            "__v_isRef": true,
            "__v_isShallow": false,
            "_rawValue": {
              "Pagination Store": {
                "activeFetchURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/posts/feed/",
                  "_value": "http://localhost:8888/api/posts/feed/",
                  "dep": undefined,
                },
                "all_pages_count": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "current_page_number": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "last_page_link": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
                "next_page": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
                "number_of_posts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": 0,
                  "_value": 0,
                  "dep": undefined,
                },
                "previous_page": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "",
                  "_value": "",
                  "dep": undefined,
                },
              },
              "Store for containing posts and related to posts": {
                "allComments": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "allTags": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "baseFetchURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/posts/feed/",
                  "_value": "http://localhost:8888/api/posts/feed/",
                  "dep": undefined,
                },
                "baseLoggedInUserPostsURL": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": "http://localhost:8888/api/myuser/posts/",
                  "_value": "http://localhost:8888/api/myuser/posts/",
                  "dep": undefined,
                },
                "followingPosts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "loggedInUserPosts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "posts": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
              },
              "search": {
                "categoryFilterPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "searchPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
                "tagFilterPart": RefImpl {
                  "__v_isRef": true,
                  "__v_isShallow": false,
                  "_rawValue": null,
                  "_value": null,
                  "dep": undefined,
                },
              },
            },
            "_value": {
              "Pagination Store": {
                "activeFetchURL": "http://localhost:8888/api/posts/feed/",
                "all_pages_count": 0,
                "current_page_number": 0,
                "last_page_link": "",
                "next_page": "",
                "number_of_posts": 0,
                "previous_page": "",
              },
              "Store for containing posts and related to posts": {
                "allComments": null,
                "allTags": null,
                "baseFetchURL": "http://localhost:8888/api/posts/feed/",
                "baseLoggedInUserPostsURL": "http://localhost:8888/api/myuser/posts/",
                "followingPosts": null,
                "loggedInUserPosts": null,
                "posts": null,
              },
              "search": {
                "categoryFilterPart": null,
                "searchPart": null,
                "tagFilterPart": null,
              },
            },
            "dep": undefined,
          },
          "use": [Function],
        },
      },
      "isNativeTag": [Function],
      "optionMergeStrategies": {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "runWithContext": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.3.13",
  },
  "__setProps": [Function],
  "cleanUpCallbacks": [
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
  ],
  "componentVM": {},
  "isDisabled": [Function],
  "rootVM": {
    "VTU_COMPONENT": {},
  },
  "wrapperElement": ,
}
`;
